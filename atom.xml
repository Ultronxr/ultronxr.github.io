<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Ultronxr&#39;s Blog</title>
  <icon>https://www.gravatar.com/avatar/ced1b7e1aa7027e6541678539ecf9154</icon>
  <subtitle>Ultronxr&#39;s Blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="https://ultronxr.xyz/"/>
  <updated>2019-03-01T10:06:06.716Z</updated>
  <id>https://ultronxr.xyz/</id>
  
  <author>
    <name>ultronxr</name>
    <email>f_1208@163.com</email>
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Ubuntu 16.04 LTS 完整安装docker和docker-compose以及常用命令</title>
    <link href="https://ultronxr.xyz/2019/03/01/Docker-with-compose-installation-in-Ubuntu/"/>
    <id>https://ultronxr.xyz/2019/03/01/Docker-with-compose-installation-in-Ubuntu/</id>
    <published>2019-03-01T08:59:09.000Z</published>
    <updated>2019-03-01T10:06:06.716Z</updated>
    
    <content type="html"><![CDATA[<p>Ubuntu 16.04 LTS 完整安装docker和docker-compose以及常用命令</p><a id="more"></a><h1 id="一、安装docker"><a href="#一、安装docker" class="headerlink" title="一、安装docker"></a>一、安装docker</h1><p>这里使用root用户安装docker，后面会对docker进行配置，使其能让所有用户使用。</p><h2 id="1-1-安装apt-transport-https包"><a href="#1-1-安装apt-transport-https包" class="headerlink" title="1.1 安装apt-transport-https包"></a>1.1 安装apt-transport-https包</h2><p>目的是让apt可以通过HTTPS使用安装包的仓库，命令如下：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install -y apt-transport-https ca-certificates curl software-properties-common</span><br></pre></td></tr></table></figure><p><br></p><h2 id="1-2、添加Docker官方的GPG密钥"><a href="#1-2、添加Docker官方的GPG密钥" class="headerlink" title="1.2、添加Docker官方的GPG密钥"></a>1.2、添加Docker官方的GPG密钥</h2><p>GPG密钥就是一种加密方法，加密之后保证你从docker库中获取的镜像和安装包等是经过官方验证的。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -</span><br></pre></td></tr></table></figure><p>安装完成后bash会显示所安装的密钥，请确保密钥的最后八个字符串与下面的完全相同：</p><p><code>9DC8 5822 9FC7 DD38 854A E2D8 8D81 803C 0EBF CD88</code></p><p><br></p><h2 id="1-3、设置docker的stable库"><a href="#1-3、设置docker的stable库" class="headerlink" title="1.3、设置docker的stable库"></a>1.3、设置docker的stable库</h2><p>设置docker的设置stable存储库，设置完成后更新apt的索引。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-key fingerprint 0EBFCD88</span><br><span class="line"></span><br><span class="line">sudo add-apt-repository <span class="string">"deb [arch=amd64] https://download.docker.com/linux/ubuntu <span class="variable">$(lsb_release -cs)</span> stable"</span></span><br><span class="line"></span><br><span class="line">sudo apt-get update</span><br></pre></td></tr></table></figure><p><br></p><h2 id="1-4、安装docker-ce"><a href="#1-4、安装docker-ce" class="headerlink" title="1.4、安装docker-ce"></a>1.4、安装docker-ce</h2><p>下面这条命令默认安装最新版本的docker-ce：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo apt-get install -y docker-ce</span><br></pre></td></tr></table></figure><p>如果需要指定版本的docker-ce，需要使用下面的命令，第一条是列出可用版本，第二条命令是指定安装版本（把<code>&lt;version&gt;</code>的位置替换成指定版本）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">apt-cache madison docker-ce</span><br><span class="line"></span><br><span class="line">sudo apt-get install docker-ce=&lt;VERSION&gt;</span><br></pre></td></tr></table></figure><p><br> <br></p><h1 id="二、验证docker是否安装完成"><a href="#二、验证docker是否安装完成" class="headerlink" title="二、验证docker是否安装完成"></a>二、验证docker是否安装完成</h1><p>查看docker服务是否启动：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">systemctl status docker</span><br></pre></td></tr></table></figure><p>如果没有启动，使用以下命令启动docker：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl start docker</span><br></pre></td></tr></table></figure><p>docker服务如果已经启动，可以运行hello-world镜像来验证docker正确运行：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo docker run hello-world</span><br></pre></td></tr></table></figure><p><br> <br></p><h1 id="三、设置docker可以被非root用户直接使用"><a href="#三、设置docker可以被非root用户直接使用" class="headerlink" title="三、设置docker可以被非root用户直接使用"></a>三、设置docker可以被非root用户直接使用</h1><p>比如你现在<code>以非root身份登录系统</code>，每次运行docker命令都需要加sudo，为了避免这个，可以把当前用户加入docker用户组。</p><p>下面是操作过程（非root用户登录系统）：</p><h2 id="3-1-创建docker用户组"><a href="#3-1-创建docker用户组" class="headerlink" title="3.1 创建docker用户组"></a>3.1 创建docker用户组</h2><p>（新版docker在安装时会自动创建docker用户组，如果运行下面的命令，提示docker用户组已存在，可以直接进入下一步）</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo groupadd docker</span><br></pre></td></tr></table></figure><p><br></p><h2 id="3-2-将当前用户加入docker用户组"><a href="#3-2-将当前用户加入docker用户组" class="headerlink" title="3.2 将当前用户加入docker用户组"></a>3.2 将当前用户加入docker用户组</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo gpasswd -a <span class="variable">$&#123;USER&#125;</span> docker</span><br></pre></td></tr></table></figure><p><br></p><h2 id="3-3-重启docker服务"><a href="#3-3-重启docker服务" class="headerlink" title="3.3 重启docker服务"></a>3.3 重启docker服务</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo systemctl restart docker</span><br></pre></td></tr></table></figure><p><br></p><h2 id="3-4-用户退出登录，重新登录（别忘了这一步！）"><a href="#3-4-用户退出登录，重新登录（别忘了这一步！）" class="headerlink" title="3.4 用户退出登录，重新登录（别忘了这一步！）"></a>3.4 用户退出登录，重新登录（别忘了这一步！）</h2><p>完成后非root用户也可以直接运行docker的相关命令，而不需要加sudo。</p><p><br> <br></p><h1 id="四、安装docker-compose"><a href="#四、安装docker-compose" class="headerlink" title="四、安装docker-compose"></a>四、安装docker-compose</h1><p>很简单，一条命令，只不过需要先按照python3的环境（这是我所有找到能安装docker-compose最方便的方法了）：</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">sudo pip3 install docker-compose</span><br></pre></td></tr></table></figure><p><br> <br></p><h1 id="五、docker常用命令"><a href="#五、docker常用命令" class="headerlink" title="五、docker常用命令"></a>五、docker常用命令</h1><table><thead><tr><th style="text-align:center">作用</th><th style="text-align:center">命令</th><th style="text-align:center">参数含义</th></tr></thead><tbody><tr><td style="text-align:center">登录docker</td><td style="text-align:center"><code>docker login</code></td><td style="text-align:center">无</td></tr><tr><td style="text-align:center">查看当前正在运行的所有镜像</td><td style="text-align:center"><code>docker ps</code></td><td style="text-align:center">无</td></tr><tr><td style="text-align:center">查看当前正在运行的所有镜像的id</td><td style="text-align:center"><code>docker ps -q</code></td><td style="text-align:center">无</td></tr><tr><td style="text-align:center">查看所有镜像</td><td style="text-align:center"><code>docker ps -a</code></td><td style="text-align:center">无</td></tr><tr><td style="text-align:center">查找镜像</td><td style="text-align:center"><code>docker search &lt;image&gt;</code></td><td style="text-align:center">image：镜像名称</td></tr><tr><td style="text-align:center">下载镜像</td><td style="text-align:center"><code>docker pull &lt;image&gt;</code></td><td style="text-align:center">image：镜像名称</td></tr><tr><td style="text-align:center">后台守护式运行镜像</td><td style="text-align:center"><code>docker run -d &lt;image&gt;</code></td><td style="text-align:center">image：镜像名称</td></tr><tr><td style="text-align:center">运行镜像的同时进入交互界面</td><td style="text-align:center"><code>docker run -it &lt;image&gt; /bin/bash</code></td><td style="text-align:center">image：镜像名称</td></tr><tr><td style="text-align:center">运行镜像的同时设置环境变量</td><td style="text-align:center"><code>docker -e &lt;name&gt;=&lt;value&gt; &lt;image&gt;</code></td><td style="text-align:center">name：环境变量名称，value：环境变量的值，image：镜像名称</td></tr><tr><td style="text-align:center">运行的时候进行端口映射</td><td style="text-align:center"><code>docker run -p &lt;hostport&gt;:&lt;containerport&gt;</code></td><td style="text-align:center">hostport：主机端口，containerport：容器端口</td></tr><tr><td style="text-align:center">运行容器的时候指定容器名称</td><td style="text-align:center"><code>docker run --name &lt;name&gt;</code></td><td style="text-align:center">name：所指定的容器的名称</td></tr><tr><td style="text-align:center">运行容器的时候指定重启策略</td><td style="text-align:center"><code>docker run --restart=&lt;val&gt;</code></td><td style="text-align:center">val：restart策略的值，可选always和on-failure等值</td></tr><tr><td style="text-align:center">进入正在运行的镜像</td><td style="text-align:center"><code>docker exec -it &lt;containerid&gt; /bin/bash</code></td><td style="text-align:center">containerid：容器id</td></tr><tr><td style="text-align:center">停止运行容器</td><td style="text-align:center"><code>docker stop &lt;containerid&gt;</code></td><td style="text-align:center">containerid：容器id</td></tr><tr><td style="text-align:center">删除容器</td><td style="text-align:center"><code>docker rm &lt;containerid&gt;</code></td><td style="text-align:center">containerid：容器id</td></tr></tbody></table><p>注：以上表格中的尖括号<code>&lt;&gt;</code>所括的内容为必选参数，运行命令时必须替换成实际内容。</p><p><br> <br></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Ubuntu 16.04 LTS 完整安装docker和docker-compose以及常用命令&lt;/p&gt;
    
    </summary>
    
      <category term="docker" scheme="https://ultronxr.xyz/categories/docker/"/>
    
    
      <category term="docker" scheme="https://ultronxr.xyz/tags/docker/"/>
    
      <category term="ubuntu" scheme="https://ultronxr.xyz/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>使用docker中的Netcloud镜像搭建你的个人网盘</title>
    <link href="https://ultronxr.xyz/2019/03/01/Build-your-personal-netdisk-using-the-Netcloud-image-in-docker/"/>
    <id>https://ultronxr.xyz/2019/03/01/Build-your-personal-netdisk-using-the-Netcloud-image-in-docker/</id>
    <published>2019-03-01T08:52:56.000Z</published>
    <updated>2019-03-01T10:48:18.292Z</updated>
    
    <content type="html"><![CDATA[<p>简单介绍一下通过docker的nextcloud镜像搭建个人网盘。</p><a id="more"></a><h1 id="一、简介"><a href="#一、简介" class="headerlink" title="一、简介"></a>一、简介</h1><p>现在国内市面上有很多网盘，比如百度网盘和腾讯微云，但是基本上都是限速，然后要充钱才能获取更好的服务。</p><p>这里简单介绍一下通过docker的nextcloud镜像搭建个人网盘，网盘的传输速度取决于服务器的网络带宽。而且nextcloud可以更深层次地设置和定制自己需要的功能，或者对网盘进行监控和优化等操作。也可以给其他人分配子账户和指定用户组，进行方便的管理。总之功能比那些市面上的网盘功能多很多。</p><p><br> <br></p><h1 id="二、安装"><a href="#二、安装" class="headerlink" title="二、安装"></a>二、安装</h1><h2 id="2-1-安装docker"><a href="#2-1-安装docker" class="headerlink" title="2.1 安装docker"></a>2.1 安装docker</h2><p>安装方法详见我的博客另一篇文章：<a href="/2019/03/01/Docker-with-compose-installation-in-Ubuntu/">Ubuntu 16.04 LTS 完整安装docker和docker-compose以及常用命令</a></p><p><br></p><h2 id="2-2-安装nextcloud镜像并运行"><a href="#2-2-安装nextcloud镜像并运行" class="headerlink" title="2.2 安装nextcloud镜像并运行"></a>2.2 安装nextcloud镜像并运行</h2><p>找到镜像然后下载下来，注意下载的时候请选择<code>OFFICIAL</code>官方的镜像。</p><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">docker search nextcloud</span><br><span class="line"></span><br><span class="line">docker pull nextcloud</span><br><span class="line"></span><br><span class="line">docker run -d --restart=always --name nextcloud -p 80:80 -v /root/nextcloud:/data nextcloud</span><br></pre></td></tr></table></figure><p>第三条命令的<code>-d</code>代表该容器为守护容器，会在后台运行，<code>--restart=always</code>表示无论如何改容器都会被自动重启，<code>--name nextcloud</code>表示把容器的名称命名为nextcloud，<code>-p 80:80</code>表示把容器的80端口映射到主机的80端口（前一个是主机端口，后一个是容器端口），<code>-v /root/nextcloud:/data</code>表示把主机的/root/nextcloud目录映射到容器中的/data目录。</p><p><br></p><h2 id="2-3-检查镜像是否运行成功"><a href="#2-3-检查镜像是否运行成功" class="headerlink" title="2.3 检查镜像是否运行成功"></a>2.3 检查镜像是否运行成功</h2><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">docker ps</span><br></pre></td></tr></table></figure><p>找到nextcloud对应的镜像，在PORTS那一列查看值，如果显示的是<code>0.0.0.0:80-&gt;80/tcp</code>说明端口映射成功。</p><p>如果镜像没有在运行，或者显示的端口值不正确，有可能是主机的80端口已经被占用，可以清理一下占用80端口的进程，或者选择不映射到80端口。然后重新尝试运行。</p><p><br></p><h2 id="2-4-登录nextcloud界面并进行初始化设置"><a href="#2-4-登录nextcloud界面并进行初始化设置" class="headerlink" title="2.4 登录nextcloud界面并进行初始化设置"></a>2.4 登录nextcloud界面并进行初始化设置</h2><p>在浏览器输入服务器的公网ip加端口（如果是80端口不用写），即可进入nextcloud登录界面。</p><p>第一次进入nextcloud，它会要求你设置管理员账户，数据存放目录，以及数据库配置。</p><p>管理员账户填完后，数据存放目录可以保持默认，数据库配置也可以保持默认（如果网盘存放大量数据，推荐使用mysql，否则使用默认的sqlite即可）。</p><p>点击安装完成，nextcloud就会应用设置，稍等一会就可以进入网盘的主界面了。</p><p><br></p><h2 id="2-5-设置管理员账户的联系邮箱"><a href="#2-5-设置管理员账户的联系邮箱" class="headerlink" title="2.5 设置管理员账户的联系邮箱"></a>2.5 设置管理员账户的联系邮箱</h2><p>设置邮箱后，你的网盘就会在指定的情况下给你发邮件提醒你了。设置方法如下：</p><p>（重要！）需要打开你的邮箱的SMTP功能，在邮箱的设置界面可以找到。</p><p>进入nextcloud的设置界面，找到基本设置，在电子邮件服务器下面对应位置填写以下信息：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">发送模式：SMTP  加密：SSL/TLS</span><br><span class="line"></span><br><span class="line">来自地址：你的邮箱地址</span><br><span class="line"></span><br><span class="line">认证方法： 登录  勾选需要认证</span><br><span class="line"></span><br><span class="line">服务器地址：你使用邮箱公司所使用的SMTP的IP地址和端口（一般在官网可以查到）</span><br><span class="line"></span><br><span class="line">凭证：账户名和密码</span><br></pre></td></tr></table></figure><p>设置完成后点击测试发送邮件，如果你的邮箱能收到nextcloud的邮件说明配置成功。</p><p><br></p><p><br> <br></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;简单介绍一下通过docker的nextcloud镜像搭建个人网盘。&lt;/p&gt;
    
    </summary>
    
      <category term="docker" scheme="https://ultronxr.xyz/categories/docker/"/>
    
    
      <category term="docker" scheme="https://ultronxr.xyz/tags/docker/"/>
    
      <category term="ubuntu" scheme="https://ultronxr.xyz/tags/ubuntu/"/>
    
      <category term="netdisk" scheme="https://ultronxr.xyz/tags/netdisk/"/>
    
  </entry>
  
  <entry>
    <title>Java项目的Utils包中一些常用的通用静态函数</title>
    <link href="https://ultronxr.xyz/2019/02/22/Functions-commonly-used-in-Java-Utils-packages/"/>
    <id>https://ultronxr.xyz/2019/02/22/Functions-commonly-used-in-Java-Utils-packages/</id>
    <published>2019-02-22T12:42:22.000Z</published>
    <updated>2019-02-22T13:27:20.980Z</updated>
    
    <content type="html"><![CDATA[<p>记录一些例如JDBCUtil、获取随机整数、MD5加密等常用的Utils函数。</p><a id="more"></a><h1 id="一、JDBCUtil"><a href="#一、JDBCUtil" class="headerlink" title="一、JDBCUtil"></a>一、JDBCUtil</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br><span class="line">73</span><br><span class="line">74</span><br><span class="line">75</span><br><span class="line">76</span><br><span class="line">77</span><br><span class="line">78</span><br><span class="line">79</span><br><span class="line">80</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> java.io.IOException;</span><br><span class="line"><span class="keyword">import</span> java.io.InputStream;</span><br><span class="line"><span class="keyword">import</span> java.sql.*;</span><br><span class="line"><span class="keyword">import</span> java.util.Properties;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">JDBCUtil</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String jdbcDriver = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String url = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String username = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">private</span> <span class="keyword">static</span> String password = <span class="keyword">null</span>;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> &#123;</span><br><span class="line">        loadProperties();</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Class.forName(jdbcDriver);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (ClassNotFoundException e) &#123;</span><br><span class="line">            System.out.println(<span class="string">"[x] ClassNotFoundException 数据库加载驱动失败！"</span>);</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Connection <span class="title">getConnection</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        Connection con = <span class="keyword">null</span>;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            con = DriverManager.getConnection(url, username, password);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            System.out.println(<span class="string">"[x] SQLException 数据库连接失败！"</span>);</span><br><span class="line">            e.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">return</span> con;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">closeConnection</span><span class="params">(ResultSet rs, PreparedStatement stmt, Connection con)</span> </span>&#123;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (rs != <span class="keyword">null</span>) rs.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            System.out.println(<span class="string">"[x] SQLException 关闭JDBC连接的RS时出错！"</span>);</span><br><span class="line">            <span class="comment">//e.printStackTrace();</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (stmt != <span class="keyword">null</span>) stmt.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            System.out.println(<span class="string">"[x] SQLException 关闭JDBC连接的STMT时出错！"</span>);</span><br><span class="line">            <span class="comment">//e.printStackTrace();</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            <span class="keyword">if</span> (con != <span class="keyword">null</span>) con.close();</span><br><span class="line">        &#125; <span class="keyword">catch</span> (SQLException e) &#123;</span><br><span class="line">            System.out.println(<span class="string">"[x] SQLException 关闭JDBC连接的CON时出错！"</span>);</span><br><span class="line">            <span class="comment">//e.printStackTrace();</span></span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">loadProperties</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        InputStream inputStream  =  JDBCUtil.class.getClassLoader().getResourceAsStream( <span class="string">"jdbc.properties"</span> );</span><br><span class="line">        Properties p = <span class="keyword">new</span> Properties();</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            p.load(inputStream);</span><br><span class="line">        &#125;<span class="keyword">catch</span>(IOException e)&#123;</span><br><span class="line">            System.out.println(<span class="string">"[x] IOException JDBC配置文件加载失败！"</span>);</span><br><span class="line">            <span class="comment">//e.printStackTrace();</span></span><br><span class="line">        &#125;</span><br><span class="line"></span><br><span class="line">        jdbcDriver = p.getProperty(<span class="string">"driverClassName"</span>);</span><br><span class="line">        url = p.getProperty(<span class="string">"url"</span>);</span><br><span class="line">        username = p.getProperty(<span class="string">"username"</span>);</span><br><span class="line">        password = p.getProperty(<span class="string">"password"</span>);</span><br><span class="line"></span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/* jdbc.properties</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment">driverClassName=com.mysql.cj.jdbc.Driver</span></span><br><span class="line"><span class="comment">url=jdbc:mysql://localhost:3306/?useUnicode=true&amp;characterEncoding=utf-8&amp;useSSL=false&amp;serverTimezone=GMT%2B8</span></span><br><span class="line"><span class="comment">username=</span></span><br><span class="line"><span class="comment">password=</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure><p><br><br></p><h1 id="二、获取随机整数"><a href="#二、获取随机整数" class="headerlink" title="二、获取随机整数"></a>二、获取随机整数</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 获取随机整数</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> min 所需要整数范围的最小值</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> max 所需要整数范围的最大值</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> int 一个整数，范围为两边闭合的区间[min,max]</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> Random random = <span class="keyword">new</span> Random();</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">intRangedRandNum</span><span class="params">(<span class="keyword">int</span> min, <span class="keyword">int</span> max)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> random.nextInt(max)%(max-min+<span class="number">1</span>)+min;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br></p><h1 id="三、MD5加密"><a href="#三、MD5加密" class="headerlink" title="三、MD5加密"></a>三、MD5加密</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 对字符串进行MD5加密</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> data 需要加密的目标字符串</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> String 返回加密后的结果字符串，长度为32且全部小写</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">toMD5</span><span class="params">(String data)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">if</span> (data == <span class="keyword">null</span>) <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">try</span> &#123;</span><br><span class="line">        MessageDigest md = MessageDigest.getInstance(<span class="string">"MD5"</span>);</span><br><span class="line">        md.update(data.getBytes());</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">new</span> BigInteger(<span class="number">1</span>, md.digest()).toString(<span class="number">16</span>);</span><br><span class="line">    &#125; <span class="keyword">catch</span> (NoSuchAlgorithmException e) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">null</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br></p><h1 id="四、判断一个字符是否是中文汉字和中文标点"><a href="#四、判断一个字符是否是中文汉字和中文标点" class="headerlink" title="四、判断一个字符是否是中文汉字和中文标点"></a>四、判断一个字符是否是中文汉字和中文标点</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 判断一个字符是否是汉字（中文标点不算），汉字的编码范围：[\u4e00-\u9fa5]</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> c 所需要判断的字符</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> boolean 判断的结果，是汉字为true，不是为false</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isChineseCharacter</span><span class="params">(<span class="keyword">char</span> c)</span> </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> String.valueOf(c).matches(<span class="string">"[\u4e00-\u9fa5]"</span>);</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 判断一个字符是否为中文标点符号</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> c 所需要判断的字符</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> boolean 判断的结果，是中文标点为true，不是为false</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">boolean</span> <span class="title">isChinesePunctuation</span><span class="params">(<span class="keyword">char</span> c)</span> </span>&#123;</span><br><span class="line">    Character.UnicodeBlock ub = Character.UnicodeBlock.of(c);</span><br><span class="line">    <span class="keyword">if</span> (ub == Character.UnicodeBlock.GENERAL_PUNCTUATION</span><br><span class="line">            || ub == Character.UnicodeBlock.CJK_SYMBOLS_AND_PUNCTUATION</span><br><span class="line">            || ub == Character.UnicodeBlock.HALFWIDTH_AND_FULLWIDTH_FORMS</span><br><span class="line">            || ub == Character.UnicodeBlock.CJK_COMPATIBILITY_FORMS</span><br><span class="line">            || ub == Character.UnicodeBlock.VERTICAL_FORMS) &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">true</span>;</span><br><span class="line">    &#125; <span class="keyword">else</span> &#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="keyword">false</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p><br><br></p><h1 id="五、计算数学表达式-字符串-的值-Jeval"><a href="#五、计算数学表达式-字符串-的值-Jeval" class="headerlink" title="五、计算数学表达式(字符串)的值(Jeval)"></a>五、计算数学表达式(字符串)的值(Jeval)</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * 计算数学表达式(字符串)的值，使用Jeval</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> expression 待计算的字符串类型的数学表达式</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> String 计算的结果(PlainString表示取消了大数的科学计数法)</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">private</span> <span class="keyword">static</span> Evaluator evaluator = <span class="keyword">new</span> Evaluator();</span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> String <span class="title">getAnsOfAExpression</span><span class="params">(String expression)</span></span>&#123;</span><br><span class="line">    Double res = <span class="number">0.0</span>;</span><br><span class="line">    BigDecimal bigDecimal = <span class="keyword">null</span>;</span><br><span class="line">    <span class="keyword">try</span>&#123;</span><br><span class="line">        res = evaluator.getNumberResult(expression);</span><br><span class="line">        bigDecimal = <span class="keyword">new</span> BigDecimal(res.toString());</span><br><span class="line">    &#125;<span class="keyword">catch</span> (EvaluationException e) &#123;</span><br><span class="line">        e.printStackTrace();</span><br><span class="line">    &#125;</span><br><span class="line">    <span class="keyword">return</span> bigDecimal.toPlainString();</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/*maven 包依赖</span></span><br><span class="line"><span class="comment">&lt;dependency&gt;</span></span><br><span class="line"><span class="comment">  &lt;groupId&gt;net.sourceforge.jeval&lt;/groupId&gt;</span></span><br><span class="line"><span class="comment">  &lt;artifactId&gt;jeval&lt;/artifactId&gt;</span></span><br><span class="line"><span class="comment">  &lt;version&gt;0.9.4&lt;/version&gt;</span></span><br><span class="line"><span class="comment">&lt;/dependency&gt;</span></span><br><span class="line"><span class="comment"> */</span></span><br></pre></td></tr></table></figure><p><br><br></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记录一些例如JDBCUtil、获取随机整数、MD5加密等常用的Utils函数。&lt;/p&gt;
    
    </summary>
    
      <category term="java" scheme="https://ultronxr.xyz/categories/java/"/>
    
    
      <category term="java" scheme="https://ultronxr.xyz/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Win10的睡眠和休眠</title>
    <link href="https://ultronxr.xyz/2019/01/30/Win10-sleep-and-hibernation/"/>
    <id>https://ultronxr.xyz/2019/01/30/Win10-sleep-and-hibernation/</id>
    <published>2019-01-30T01:54:14.000Z</published>
    <updated>2019-01-31T13:47:37.789Z</updated>
    
    <content type="html"><![CDATA[<p>这是<code>强迫症的Win10整顿计划</code>系列的第一篇，这个系列主要记录一些Win10的系统设置，或者关闭一些不必要的功能，或是几个好用的软件，能让win10更便于工作和学习。这个开坑第一篇，先讲讲Windows的睡眠和休眠。</p><a id="more"></a><h1 id="一、睡眠sleep和休眠hibernate"><a href="#一、睡眠sleep和休眠hibernate" class="headerlink" title="一、睡眠sleep和休眠hibernate"></a>一、睡眠sleep和休眠hibernate</h1><p>Win10有一个功能是睡眠（台式机和笔记本都有），另一个是休眠（笔记本特有），两者都能暂停工作、“关闭电脑”，并且重新打开电脑后能恢复工作进度。两者功能相同但是存在区别，这里简单描述一下<code>两者的区别</code>以及<code>如何关闭这两个功能</code>。</p><p>非常简洁地表述两者的联系和区别：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">睡眠实际上没有关闭电脑，休眠是完全关闭电脑了，但是两者在重新打开电脑后都能恢复原来的工作状态；</span><br><span class="line">睡眠能比休眠更快地唤醒电脑；</span><br><span class="line">睡眠的系统工作内容还是保存在内存中，所以没有完全断电，休眠则是保存在硬盘上，所以是完全断电；</span><br></pre></td></tr></table></figure><p>下面是比较具体的说明：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">睡眠模式下，系统会给内存保持通电，其他硬件断电（实际上不是绝对的），从而保留当前的工作状态。在下次开机时，可以非常快速地直接进入系统，而不用经过系统的预加载过程。</span><br><span class="line">所以睡眠模式时不能让电脑的电源出现问题或者断电，否则会导致工作状态丢失或数据丢失。</span><br><span class="line"></span><br><span class="line">休眠模式下，系统会把内存中的内容转化成休眠文件，保存在系统盘的预留位置内（hiberfil.sys文件，大小等于实际内存大小），然后给所有设备断电。在下次开机时，系统会读取休眠文件并恢复到内存中，从而恢复工作状态。过程其实相当于关机重启，所以速度不快。</span><br><span class="line">休眠模式下可以断电。</span><br></pre></td></tr></table></figure><p><br></p><h1 id="二、关闭睡眠功能"><a href="#二、关闭睡眠功能" class="headerlink" title="二、关闭睡眠功能"></a>二、关闭睡眠功能</h1><p>这么好的功能为什么要关？？？是因为不知道为什么，我的笔记本每次睡眠之后就唤醒不了，都只能强制断电重启！！！</p><p>这里说的关闭其实并不算是关闭，只能阻止系统进入睡眠状态。</p><p>取消睡眠的方法：</p><p>① <code>开始菜单</code>——<code>设置</code>——<code>系统</code>——<code>电源和睡眠</code>：把睡眠下面的两个<code>“在使用xx情况下，电脑在经过以下时间后进入睡眠状态”下拉选项</code>都设置成“<code>从不</code>”。</p><p>或</p><p>② <code>控制面板</code>——<code>系统和安全</code>——<code>电源选项</code>：中间的<code>选定的计划</code>，选择当前的计划（一般是<code>平衡</code>），右侧的 <code>更改计划设置</code> 按钮，把<code>“使计算机进入睡眠状态”一行的两个下拉选项</code>都设置成“<code>从不</code>”。</p><p><br></p><p>不仅要把你关了，而且不想再见到你了——去掉开始菜单电源按钮中的睡眠选项：</p><p><code>控制面板</code>——<code>系统和安全</code>——<code>电源选项</code>：左侧的<code>选择电源按钮的功能</code>，进去之后点一下带有管理员符号的<code>更改当前不可用的设置</code>，最下面的<code>关机设置</code>里的复选框就可以改动了，把<code>睡眠 显示在开始菜单中</code>的复选框勾勾<code>去掉</code>，然后最下面<code>保存修改</code>即可。</p><p><br></p><h1 id="三、关闭休眠功能"><a href="#三、关闭休眠功能" class="headerlink" title="三、关闭休眠功能"></a>三、关闭休眠功能</h1><p>这是确确实实可以关闭的功能，同时关闭之后，系统盘中的保存休眠文件的位置就会自动删除，就是那个hiberfil.sys文件，然后系统盘就会多出一些空位置。</p><p>关闭方法：</p><p><code>管理员模式的cmd命令行</code>——<code>powercfg -h off</code></p><p>收工。</p><p>想要重新打开休眠功能的话就把off改成on：<code>powercfg -h on</code>，另外<code>powercfg -a</code>可以查看系统的所有睡眠状态。</p><p>去掉开始菜单电源按钮中的休眠选项：</p><p>关闭休眠功能后，休眠选项会自动删除，如果不关闭只想隐藏休眠选项的话，还是和去掉睡眠选项一样：</p><p><code>控制面板</code>——<code>系统和安全</code>——<code>电源选项</code>：左侧的<code>选择电源按钮的功能</code>，进去之后点一下带有管理员符号的<code>更改当前不可用的设置</code>，最下面的<code>关机设置</code>里的复选框就可以改动了，把<code>休眠 显示在开始菜单中</code>的复选框勾勾<code>去掉</code>，然后最下面<code>保存修改</code>即可（如果关闭了休眠功能这里是没有休眠的复选框的！）。</p><p><br></p><h1 id="四、特殊的“混合睡眠”模式"><a href="#四、特殊的“混合睡眠”模式" class="headerlink" title="四、特殊的“混合睡眠”模式"></a>四、特殊的“混合睡眠”模式</h1><p>Windows还给台式机加了一种另外的特殊模式：混合睡眠模式。</p><p>顾名思义，就是把睡眠和休眠同时进行，既保持内存不断电，同时也把内存中的工作内容保存为休眠文件放到磁盘上。这样做既可以保证迅速恢复电脑工作状态，也防止了出现电源异常或断电的情况时数据丢失。</p><p><br></p><h1 id="五、参考资料"><a href="#五、参考资料" class="headerlink" title="五、参考资料"></a>五、参考资料</h1><ol><li><p><a href="https://jingyan.baidu.com/article/22a299b5f6f4809e18376a5b.html" target="_blank" rel="noopener">windows10/7关闭休眠，怎么删除hiberfil.sys</a></p></li><li><p><a href="http://www.cfan.com.cn/2017/1124/129794.shtml" target="_blank" rel="noopener">睡死的Win10？那是你没用对</a></p></li></ol><p><br> <br></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;这是&lt;code&gt;强迫症的Win10整顿计划&lt;/code&gt;系列的第一篇，这个系列主要记录一些Win10的系统设置，或者关闭一些不必要的功能，或是几个好用的软件，能让win10更便于工作和学习。这个开坑第一篇，先讲讲Windows的睡眠和休眠。&lt;/p&gt;
    
    </summary>
    
      <category term="强迫症的Win10整顿计划" scheme="https://ultronxr.xyz/categories/%E5%BC%BA%E8%BF%AB%E7%97%87%E7%9A%84Win10%E6%95%B4%E9%A1%BF%E8%AE%A1%E5%88%92/"/>
    
    
      <category term="win10" scheme="https://ultronxr.xyz/tags/win10/"/>
    
      <category term="windows" scheme="https://ultronxr.xyz/tags/windows/"/>
    
  </entry>
  
  <entry>
    <title>SSD接口</title>
    <link href="https://ultronxr.xyz/2019/01/29/Different-SSD-Interface/"/>
    <id>https://ultronxr.xyz/2019/01/29/Different-SSD-Interface/</id>
    <published>2019-01-29T11:32:50.000Z</published>
    <updated>2019-02-28T05:57:04.907Z</updated>
    
    <content type="html"><![CDATA[<p>SSD接口介绍。</p><a id="more"></a><h1 id="一、接口与协议"><a href="#一、接口与协议" class="headerlink" title="一、接口与协议"></a>一、接口与协议</h1><p>我们常说的SATA、M.2、PCIe等等指的都是物理接口，而AHCI、ATA、NVMe等所指的则是控制硬盘的协议，协议中又包含逻辑协议（AHCI、NVMe）和指令协议（ATA、NVMe），这里不详细展开。</p><p><br><br></p><h1 id="二、接口"><a href="#二、接口" class="headerlink" title="二、接口"></a>二、接口</h1><p>主流SSD接口主要就有SATA、M.2这两种，其他的mSATA、SATA Express、PCIe、U.2、SAS等接口都有受众，但确实不是非常流行。所以这里主要讲前面两种接口。</p><h2 id="2-1-SATA接口"><a href="#2-1-SATA接口" class="headerlink" title="2.1 SATA接口"></a>2.1 SATA接口</h2><p>SATA接口（Serial ATA，Serial Advanced Technology Attachment，串行ATA）是目前大部分硬盘最常用的接口，走的是，从1代发展到现在3代，传输速率大幅提升。</p><p>但是对于发展缓慢的机械硬盘HDD来说，SATA 3.0的传输速率远大于HDD的读写速率，所以HDD用SATA是非常够用的了。而2.5英寸的普通SSD也没有过大的读写速率需求，SATA接口足够使用。</p><p>下面是SATA三个主要版本的带宽、传输速率对照表：</p><table><thead><tr><th style="text-align:center">SATA版本</th><th style="text-align:center">带宽 Gb/s</th><th style="text-align:center">理论传输速率 MB/s</th></tr></thead><tbody><tr><td style="text-align:center">SATA 3.0</td><td style="text-align:center">6</td><td style="text-align:center">600</td></tr><tr><td style="text-align:center">SATA 2.0</td><td style="text-align:center">3</td><td style="text-align:center">300</td></tr><tr><td style="text-align:center">SATA 1.0</td><td style="text-align:center">1.5</td><td style="text-align:center">150</td></tr></tbody></table><p>带宽是指每秒能发送或者接收多少位（bit）的数据，而在SATA编码中，每10位数据有8位是实际数据，2位是校验数据，所以这种编码方式称为8/10编码；</p><p>理论传输速率是指每秒能发送或接收多少字节（Byte）的实际数据，计算方式为 <code>理论传输速率MB/s = 带宽Gb/s * 0.8（8/10编码） / 8（每字节8位）</code>。</p><p><br></p><h2 id="2-2-M-2接口"><a href="#2-2-M-2接口" class="headerlink" title="2.2 M.2接口"></a>2.2 M.2接口</h2><p>M.2接口（前身为Next Generation Form Factor (NGFF)）现在主要有两种类型，<code>B Key（socket 2）</code> 和  <code>M Key（socket 3）</code> 。前者走SATA 3.0或者PCIe 2.0 x4通道，理论传输速率为600MB/s左右；后者走PCIe 3.0 x4通道，理论传输速率则高达4GB/s。</p><p>M Key（socket 3）因为传输速率很高，需要足够的稳定性，所以NVMe协议的M.2接口正逐步取代以前使用的AHCI协议M.2接口。</p><p>所以M.2的socket 2、3速率差距这么大，如何区分这两者？</p><p>看防呆口的位置。</p><p>防呆口在接口左边，且短的一边为6个针脚，为B Key；防呆口在右边，且短的一边为5个针脚，为M Key。见下图：</p><div><img src="\assets\images-new\2019-01-29-Different-SSD-Interface\1.jpg" align="absmiddle" width="100%" height="100%"></div><p>再看SSD，把SSD正面（有存储芯片的一面）朝上，左侧有缺口的是B Key，右侧有缺口的是M Key。</p><div><img src="\assets\images-new\2019-01-29-Different-SSD-Interface\2.jpg" align="absmiddle" width="100%" height="100%"></div><p>B+M Key的SSD可以插在两种M.2接口上，而只有单独一边缺口的SSD（单独B Key或单独M Key）只能插在对应的接口上。</p><div><img src="\assets\images-new\2019-01-29-Different-SSD-Interface\3.jpg" align="absmiddle" width="100%" height="100%"></div><div><img src="\assets\images-new\2019-01-29-Different-SSD-Interface\4.jpg" align="absmiddle" width="100%" height="100%"></div><p>不看SSD型号，单看接口形状的情况下，如果SSD只支持M Key，说明这个SSD一定走PCIe 3.0通道，传输速率相当高；如果支持B+M Key，则无法判断是走SATA还是走PCIe，需要通过SSD型号来判断；如果只有B Key（暂时还没见过这种的SSD），则一定走SATA 3.0通道或PCIe 2.0，传输速率不是非常高。</p><p><br><br></p><h1 id="三、参考资料"><a href="#三、参考资料" class="headerlink" title="三、参考资料"></a>三、参考资料</h1><ol><li><a href="https://zh.wikipedia.org/wiki/PCI_Express" target="_blank" rel="noopener">维基百科PCI-E</a></li><li><a href="https://zh.wikipedia.org/zh/SATA" target="_blank" rel="noopener">维基百科SATA</a></li><li><a href="https://zh.wikipedia.org/zh-hans/M.2" target="_blank" rel="noopener">维基百科M.2</a></li><li><a href="https://diy.pconline.com.cn/849/8491225.html" target="_blank" rel="noopener">SSD升级选购全攻略</a></li><li><a href="https://www.autobuy.tw/article_f85d01" target="_blank" rel="noopener">M.2 SSD 選購指南</a></li></ol><p><br><br></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;SSD接口介绍。&lt;/p&gt;
    
    </summary>
    
      <category term="硬件知识" scheme="https://ultronxr.xyz/categories/%E7%A1%AC%E4%BB%B6%E7%9F%A5%E8%AF%86/"/>
    
    
      <category term="SSD" scheme="https://ultronxr.xyz/tags/SSD/"/>
    
  </entry>
  
  <entry>
    <title>使用XStream处理XML文档/数据</title>
    <link href="https://ultronxr.xyz/2019/01/24/Process-XML-text-using-XStream/"/>
    <id>https://ultronxr.xyz/2019/01/24/Process-XML-text-using-XStream/</id>
    <published>2019-01-24T08:17:08.000Z</published>
    <updated>2019-01-24T14:30:19.331Z</updated>
    
    <content type="html"><![CDATA[<p>Java里解析XML数据的API很多，主要是4种：DOM、SAX、JDOM、DOM4J。最近项目里用到了XStream，用来相互转化Java Bean和XML。这篇博客旨在快速上手使用XStream，来对XML数据和Java对象互相转化，而不是详细介绍，详细介绍请参看文章末尾官方文档的链接。</p><a id="more"></a><h1 id="一、包"><a href="#一、包" class="headerlink" title="一、包"></a>一、包</h1><p>在maven的pom.xml文件里面加上依赖（写这篇博客时，这里的版本是最新的）：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">dependency</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">groupId</span>&gt;</span>com.thoughtworks.xstream<span class="tag">&lt;/<span class="name">groupId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">artifactId</span>&gt;</span>xstream<span class="tag">&lt;/<span class="name">artifactId</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">version</span>&gt;</span>1.4.11.1<span class="tag">&lt;/<span class="name">version</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">dependency</span>&gt;</span></span><br></pre></td></tr></table></figure><p><br></p><h1 id="二、使用方法"><a href="#二、使用方法" class="headerlink" title="二、使用方法"></a>二、使用方法</h1><h2 id="1、初始化一个XStream对象"><a href="#1、初始化一个XStream对象" class="headerlink" title="1、初始化一个XStream对象"></a>1、初始化一个XStream对象</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">XStream xstream = <span class="keyword">new</span> XStream();</span><br><span class="line">XStream xstream = <span class="keyword">new</span> XStream(<span class="keyword">new</span> DomDriver()); <span class="comment">// does not require XPP3 library</span></span><br><span class="line">XStream xstream = <span class="keyword">new</span> XStream(<span class="keyword">new</span> StaxDriver()); <span class="comment">// does not require XPP3 library starting with Java 6</span></span><br></pre></td></tr></table></figure><p>有三种初始化的方法，第一种是默认方法，使用XPP3解析器，需要依赖xstream-[version].jar, xpp3-[version].jar and xmlpull-[version].jar三个包。下面两种是指定官方DOM解析器或使用Java6集成的Stax解析器。</p><p>这里我选择使用第三种。</p><p><br></p><h2 id="2、设置依赖模式"><a href="#2、设置依赖模式" class="headerlink" title="2、设置依赖模式"></a>2、设置依赖模式</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//默认依赖模式</span></span><br><span class="line">xstream.setMode(XStream.XPATH_RELATIVE_REFERENCES); </span><br><span class="line"></span><br><span class="line"><span class="comment">//特殊依赖模式</span></span><br><span class="line">xstream.setMode(XStream.XPATH_ABSOLUTE_REFERENCES);</span><br><span class="line">xstream.setMode(XStream.SINGLE_NODE_XPATH_ABSOLUTE_REFERENCES);</span><br><span class="line">xstream.setMode(XStream.SINGLE_NODE_XPATH_RELATIVE_REFERENCES);</span><br><span class="line">xstream.setMode(XStream.ID_REFERENCES);</span><br><span class="line"></span><br><span class="line"><span class="comment">//无依赖</span></span><br><span class="line">xstream.setMode(XStream.NO_REFERENCES);</span><br></pre></td></tr></table></figure><p>指定模式后，XStream在把Java对象转成XML时，会在XML中加上每个元素的依赖是什么，例如下面的XML中，最后一个cd元素的reference属性和最后一个list元素的reference属性就是在XPATH_ABSOLUTE_REFERENCES模式下自动生成的。</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">list</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">cd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>maria rita<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">cd</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">cd</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">id</span>&gt;</span>basement_jaxx_singles<span class="tag">&lt;/<span class="name">id</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;/<span class="name">cd</span>&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">cd</span> <span class="attr">reference</span>=<span class="string">"/list/cd[2]"</span>/&gt;</span></span><br><span class="line">  <span class="tag">&lt;<span class="name">list</span> <span class="attr">reference</span>=<span class="string">"/list"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">list</span>&gt;</span></span><br></pre></td></tr></table></figure><p>没有特殊需求的话，这里选用最后一种，不指定依赖NO_REFERENCES。</p><p><br></p><h2 id="3、给Java-Bean添加注解"><a href="#3、给Java-Bean添加注解" class="headerlink" title="3、给Java Bean添加注解"></a>3、给Java Bean添加注解</h2><p>看下面的三个Bean：<br><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br><span class="line">72</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">@XStreamAlias</span>(<span class="string">"ExtensionPhone"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Ext</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@XStreamAlias</span>(<span class="string">"PhoneID"</span>)</span><br><span class="line">    <span class="meta">@XStreamAsAttribute</span></span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@XStreamAlias</span>(<span class="string">"PhoneName"</span>)</span><br><span class="line">    <span class="meta">@XStreamAsAttribute</span></span><br><span class="line">    <span class="keyword">private</span> String name;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//构造函数和getter、setter省略</span></span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Ext&#123;"</span> +</span><br><span class="line">                <span class="string">"id='"</span> + id + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", name='"</span> + name + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@XStreamAlias</span>(<span class="string">"IncomingPhoneCall"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Visitor</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@XStreamAlias</span>(<span class="string">"PhoneCallID"</span>)</span><br><span class="line">    <span class="meta">@XStreamAsAttribute</span></span><br><span class="line">    <span class="keyword">private</span> String id;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@XStreamAlias</span>(<span class="string">"PhoneCallerID"</span>)</span><br><span class="line">    <span class="meta">@XStreamAsAttribute</span></span><br><span class="line">    <span class="keyword">private</span> String from;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@XStreamAlias</span>(<span class="string">"PhoneCalledID"</span>)</span><br><span class="line">    <span class="meta">@XStreamAsAttribute</span></span><br><span class="line">    <span class="keyword">private</span> String to;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@XStreamAlias</span>(<span class="string">"ExtensionPhone"</span>)</span><br><span class="line">    <span class="keyword">private</span> Ext ext;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@XStreamAlias</span>(<span class="string">"State"</span>)</span><br><span class="line">    <span class="keyword">private</span> String state;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//构造函数和getter、setter省略</span></span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Visitor&#123;"</span> +</span><br><span class="line">                <span class="string">"id='"</span> + id + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", from='"</span> + from + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", to='"</span> + to + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">", ext="</span> + ext +</span><br><span class="line">                <span class="string">", state='"</span> + state + <span class="string">'\''</span> +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="meta">@XStreamAlias</span>(<span class="string">"Status"</span>)</span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">Status</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="meta">@XStreamAlias</span>(<span class="string">"IncomingPhoneCall"</span>)</span><br><span class="line">    <span class="keyword">private</span> Visitor visitor;</span><br><span class="line"></span><br><span class="line">    <span class="comment">//构造函数和getter、setter省略</span></span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> String <span class="title">toString</span><span class="params">()</span> </span>&#123;</span><br><span class="line">        <span class="keyword">return</span> <span class="string">"Status&#123;"</span> +</span><br><span class="line">                <span class="string">"visitor="</span> + visitor +</span><br><span class="line">                <span class="string">'&#125;'</span>;</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure></p><p>上面的三个Bean中出现了两种注解，即<code>@XStreamAlias(&quot;&quot;)</code>和<code>@XStreamAsAttribute</code>，这两种是最常用的注解，前者的作用是给成员变量设置别名，后者表示把该成员变量设置为属性，而不是一个独立元素。</p><p>常用注解如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">@XStreamAlias(&quot;&quot;)                  设置字段别名</span><br><span class="line">@XStreamAsAttribute                设置字段为父元素属性，而不是独立元素</span><br><span class="line">@XStreamOmitField                  忽略此字段（省略此成员变量，不加入XML中）</span><br><span class="line">@XStreamImplicit                   隐式集合（忽略根元素）</span><br><span class="line">@XStreamImplicit(itemFieldName=&quot;&quot;) 设置隐式集合中的元素名称</span><br><span class="line">@XStreamConverter(&quot;&quot;)              自定义转换器</span><br></pre></td></tr></table></figure><p><br></p><h2 id="4-应用注解"><a href="#4-应用注解" class="headerlink" title="4.应用注解"></a>4.应用注解</h2><p>应用注解的方法有两种，第一种是让解析器自动探测注解，第二种是指定使用哪个类的注解。两者的区别，在于性能上，前者需要对每一个类都进行缓存，而后者只需要对指定的类进行缓存。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">xstream.autodetectAnnotations(<span class="keyword">true</span>); <span class="comment">//自动探测注解</span></span><br><span class="line">xstream.processAnnotations(Class[] type); <span class="comment">//指定使用哪个类的注解</span></span><br></pre></td></tr></table></figure><p><br></p><h2 id="5-Java-Bean转XML"><a href="#5-Java-Bean转XML" class="headerlink" title="5.Java Bean转XML"></a>5.Java Bean转XML</h2><p>先看Java Bean转XML：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//构造Java Bean</span></span><br><span class="line">Ext ext = <span class="keyword">new</span> Ext(<span class="string">"1001"</span>, <span class="string">"Ext1001"</span>);</span><br><span class="line">Visitor visitor = <span class="keyword">new</span> Visitor(<span class="string">"0001"</span>, <span class="string">"123000000"</span>, <span class="string">"456000000"</span>, ext, <span class="string">"processing"</span>);</span><br><span class="line">Status status = <span class="keyword">new</span> Status(visitor);</span><br><span class="line"></span><br><span class="line"><span class="comment">//初始化xstream</span></span><br><span class="line">XStream xstream = <span class="keyword">new</span> XStream(<span class="keyword">new</span> StaxDriver());</span><br><span class="line">xstream.setMode(XStream.NO_REFERENCES);</span><br><span class="line">xstream.processAnnotations(Status.class);</span><br><span class="line"></span><br><span class="line"><span class="comment">//Bean转XML</span></span><br><span class="line">String res = xstream.toXML(status);</span><br><span class="line"></span><br><span class="line">System.out.println(res);</span><br></pre></td></tr></table></figure><p>查看输出结果（经过格式化）：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line"><span class="meta">&lt;?xml version='1.0' encoding='UTF-8'?&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">Status</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">IncomingPhoneCall</span> <span class="attr">PhoneCallID</span>=<span class="string">"0001"</span> <span class="attr">PhoneCallerID</span>=<span class="string">"123000000"</span> <span class="attr">PhoneCalledID</span>=<span class="string">"456000000"</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">ExtensionPhone</span> <span class="attr">PhoneID</span>=<span class="string">"1001"</span> <span class="attr">PhoneName</span>=<span class="string">"Ext1001"</span>/&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">State</span>&gt;</span>processing<span class="tag">&lt;/<span class="name">State</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">IncomingPhoneCall</span>&gt;</span></span><br><span class="line"><span class="tag">&lt;/<span class="name">Status</span>&gt;</span></span><br></pre></td></tr></table></figure><p><br></p><h2 id="6、XML转Java-Bean"><a href="#6、XML转Java-Bean" class="headerlink" title="6、XML转Java Bean"></a>6、XML转Java Bean</h2><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Status status1 = (Status)xstream.fromXML(res);</span><br><span class="line">System.out.println(status1);</span><br></pre></td></tr></table></figure><p>输出结果：<br><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">Status&#123;visitor=Visitor&#123;id=&apos;0001&apos;, from=&apos;123000000&apos;, to=&apos;456000000&apos;, ext=Ext&#123;id=&apos;1001&apos;, name=&apos;Ext1001&apos;&#125;, state=&apos;processing&apos;&#125;&#125;</span><br></pre></td></tr></table></figure></p><p><br></p><h1 id="三、相关资料"><a href="#三、相关资料" class="headerlink" title="三、相关资料"></a>三、相关资料</h1><ol><li><a href="https://x-stream.github.io/tutorial.html" target="_blank" rel="noopener">官方文档</a></li><li><a href="http://www.cnblogs.com/LiZhiW/p/4313493.html#_label0" target="_blank" rel="noopener">XStream使用详解</a></li></ol><p><br><br><br></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Java里解析XML数据的API很多，主要是4种：DOM、SAX、JDOM、DOM4J。最近项目里用到了XStream，用来相互转化Java Bean和XML。这篇博客旨在快速上手使用XStream，来对XML数据和Java对象互相转化，而不是详细介绍，详细介绍请参看文章末尾官方文档的链接。&lt;/p&gt;
    
    </summary>
    
      <category term="java" scheme="https://ultronxr.xyz/categories/java/"/>
    
    
      <category term="java" scheme="https://ultronxr.xyz/tags/java/"/>
    
      <category term="xml" scheme="https://ultronxr.xyz/tags/xml/"/>
    
  </entry>
  
  <entry>
    <title>直接打印Java对象的内存地址</title>
    <link href="https://ultronxr.xyz/2019/01/20/Print-address-of-object-in-java/"/>
    <id>https://ultronxr.xyz/2019/01/20/Print-address-of-object-in-java/</id>
    <published>2019-01-20T07:31:11.000Z</published>
    <updated>2019-01-24T08:20:16.509Z</updated>
    
    <content type="html"><![CDATA[<p>记录一下用Java直接打印对象的地址的代码，也可以使用调试的方法查看对象地址，这里就单纯记录一下。</p><p>从别人的博客看到的：<a href="https://blog.csdn.net/isscollege/article/details/78398968" target="_blank" rel="noopener">原博客</a></p><a id="more"></a><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">import</span> sun.misc.Unsafe;</span><br><span class="line"><span class="keyword">import</span> java.lang.reflect.Field;</span><br><span class="line"></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">PrintAddress</span> </span>&#123;</span><br><span class="line"></span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> Unsafe unsafe = getUnsafe();</span><br><span class="line">    <span class="keyword">static</span> <span class="keyword">final</span> <span class="keyword">boolean</span> is64bit = <span class="keyword">true</span>;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">main</span><span class="params">(String []args)</span></span>&#123;</span><br><span class="line"></span><br><span class="line">        Integer a = Integer.valueOf(<span class="string">"1"</span>);</span><br><span class="line">        printAddresses(<span class="string">"a"</span>, a);</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">void</span> <span class="title">printAddresses</span><span class="params">(String label, Object... objects)</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">        System.out.print(label + <span class="string">": 0x"</span>);</span><br><span class="line">        <span class="keyword">long</span> last = <span class="number">0</span>;</span><br><span class="line">        <span class="keyword">int</span> offset = unsafe.arrayBaseOffset(objects.getClass());</span><br><span class="line">        <span class="keyword">int</span> scale = unsafe.arrayIndexScale(objects.getClass());</span><br><span class="line">        <span class="keyword">switch</span> (scale) &#123;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">4</span>:</span><br><span class="line">                <span class="keyword">long</span> factor = is64bit ? <span class="number">8</span> : <span class="number">1</span>;</span><br><span class="line">                <span class="keyword">final</span> <span class="keyword">long</span> i1 = (unsafe.getInt(objects, offset) &amp; <span class="number">0xFFFFFFFFL</span>) * factor;</span><br><span class="line">                System.out.print(Long.toHexString(i1));</span><br><span class="line">                last = i1;</span><br><span class="line">                <span class="keyword">for</span> (<span class="keyword">int</span> i = <span class="number">1</span>; i &lt; objects.length; i++) &#123;</span><br><span class="line">                    <span class="keyword">final</span> <span class="keyword">long</span> i2 = (unsafe.getInt(objects, offset + i * <span class="number">4</span>) &amp; <span class="number">0xFFFFFFFFL</span>) * factor;</span><br><span class="line">                    <span class="keyword">if</span> (i2 &gt; last)</span><br><span class="line">                        System.out.print(<span class="string">", +"</span> + Long.toHexString(i2 - last));</span><br><span class="line">                    <span class="keyword">else</span></span><br><span class="line">                        System.out.print(<span class="string">", -"</span> + Long.toHexString( last - i2));</span><br><span class="line">                    last = i2;</span><br><span class="line">                &#125;</span><br><span class="line">                <span class="keyword">break</span>;</span><br><span class="line">            <span class="keyword">case</span> <span class="number">8</span>:</span><br><span class="line">                <span class="keyword">throw</span> <span class="keyword">new</span> AssertionError(<span class="string">"Not supported"</span>);</span><br><span class="line">        &#125;</span><br><span class="line">        System.out.println();</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line"></span><br><span class="line">    <span class="function"><span class="keyword">private</span> <span class="keyword">static</span> Unsafe <span class="title">getUnsafe</span><span class="params">()</span> </span>&#123;</span><br><span class="line">    </span><br><span class="line">        <span class="keyword">try</span> &#123;</span><br><span class="line">            Field theUnsafe = Unsafe.class.getDeclaredField(<span class="string">"theUnsafe"</span>);</span><br><span class="line">            theUnsafe.setAccessible(<span class="keyword">true</span>);</span><br><span class="line">            <span class="keyword">return</span> (Unsafe) theUnsafe.get(<span class="keyword">null</span>);</span><br><span class="line">        &#125; <span class="keyword">catch</span> (Exception e) &#123;</span><br><span class="line">            <span class="keyword">throw</span> <span class="keyword">new</span> AssertionError(e);</span><br><span class="line">        &#125;</span><br><span class="line">        </span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;记录一下用Java直接打印对象的地址的代码，也可以使用调试的方法查看对象地址，这里就单纯记录一下。&lt;/p&gt;
&lt;p&gt;从别人的博客看到的：&lt;a href=&quot;https://blog.csdn.net/isscollege/article/details/78398968&quot; target=&quot;_blank&quot; rel=&quot;noopener&quot;&gt;原博客&lt;/a&gt;&lt;/p&gt;
    
    </summary>
    
      <category term="java" scheme="https://ultronxr.xyz/categories/java/"/>
    
    
      <category term="java" scheme="https://ultronxr.xyz/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>Java中 parseInt 和 valueOf 两种方法的比较</title>
    <link href="https://ultronxr.xyz/2019/01/19/The-Comparison-of-parseInt-and-valueOf-in-java/"/>
    <id>https://ultronxr.xyz/2019/01/19/The-Comparison-of-parseInt-and-valueOf-in-java/</id>
    <published>2019-01-19T09:06:57.000Z</published>
    <updated>2019-01-24T08:19:42.842Z</updated>
    
    <content type="html"><![CDATA[<p>Java编程中字符串转数字是经常遇到的事，在Integer类下面有parseInt和valueOf两个方法，以前纠结过用哪个方法，现在就比较一下两个方法的区别。</p><a id="more"></a><h1 id="一、parseInt源码"><a href="#一、parseInt源码" class="headerlink" title="一、parseInt源码"></a>一、parseInt源码</h1><p>直接上Java源代码是最直观能看出区别的方法。</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Java 1.8 库中 parseInt 的两种方法源码</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Parses the string argument as a signed integer in the radix</span></span><br><span class="line"><span class="comment"> * specified by the second argument. The characters in the string</span></span><br><span class="line"><span class="comment"> * must all be digits of the specified radix (as determined by</span></span><br><span class="line"><span class="comment"> * whether &#123;<span class="doctag">@link</span> java.lang.Character#digit(char, int)&#125; returns a</span></span><br><span class="line"><span class="comment"> * nonnegative value), except that the first character may be an</span></span><br><span class="line"><span class="comment"> * ASCII minus sign &#123;<span class="doctag">@code</span> '-'&#125; (&#123;<span class="doctag">@code</span> '\u005Cu002D'&#125;) to</span></span><br><span class="line"><span class="comment"> * indicate a negative value or an ASCII plus sign &#123;<span class="doctag">@code</span> '+'&#125;</span></span><br><span class="line"><span class="comment"> * (&#123;<span class="doctag">@code</span> '\u005Cu002B'&#125;) to indicate a positive value. The</span></span><br><span class="line"><span class="comment"> * resulting integer value is returned.</span></span><br><span class="line"><span class="comment"></span></span><br><span class="line"><span class="comment"> * An exception of type &#123;<span class="doctag">@code</span> NumberFormatException&#125; is</span></span><br><span class="line"><span class="comment"> * thrown if any of the following situations occurs:</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> *    One. The first argument is &#123;<span class="doctag">@code</span> null&#125; or is a string of</span></span><br><span class="line"><span class="comment"> * length zero.</span></span><br><span class="line"><span class="comment"> *    Two. The radix is either smaller than</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@link</span> java.lang.Character#MIN_RADIX&#125; or</span></span><br><span class="line"><span class="comment"> * larger than &#123;<span class="doctag">@link</span> java.lang.Character#MAX_RADIX&#125;.</span></span><br><span class="line"><span class="comment"> *    Three. Any character of the string is not a digit of the specified</span></span><br><span class="line"><span class="comment"> * radix, except that the first character may be a minus sign</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@code</span> '-'&#125; (&#123;<span class="doctag">@code</span> '\u005Cu002D'&#125;) or plus sign</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@code</span> '+'&#125; (&#123;<span class="doctag">@code</span> '\u005Cu002B'&#125;) provided that the</span></span><br><span class="line"><span class="comment"> * string is longer than length 1.</span></span><br><span class="line"><span class="comment"> *    Four. The value represented by the string is not a value of type</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@code</span> int&#125;.</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>      s   the &#123;<span class="doctag">@code</span> String&#125; containing the integer</span></span><br><span class="line"><span class="comment"> *                  representation to be parsed</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>      radix   the radix to be used while parsing &#123;<span class="doctag">@code</span> s&#125;.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span>     the integer represented by the string argument in the</span></span><br><span class="line"><span class="comment"> *             specified radix.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@exception</span>  NumberFormatException if the &#123;<span class="doctag">@code</span> String&#125;</span></span><br><span class="line"><span class="comment"> *             does not contain a parsable &#123;<span class="doctag">@code</span> int&#125;.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">parseInt</span><span class="params">(String s, <span class="keyword">int</span> radix)</span> <span class="keyword">throws</span> NumberFormatException </span>&#123;</span><br><span class="line">    <span class="comment">//略</span></span><br><span class="line">&#125;</span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Parses the string argument as a signed decimal integer. The</span></span><br><span class="line"><span class="comment"> * characters in the string must all be decimal digits, except</span></span><br><span class="line"><span class="comment"> * that the first character may be an ASCII minus sign &#123;<span class="doctag">@code</span> '-'&#125;</span></span><br><span class="line"><span class="comment"> * (&#123;<span class="doctag">@code</span> '\u005Cu002D'&#125;) to indicate a negative value or an</span></span><br><span class="line"><span class="comment"> * ASCII plus sign &#123;<span class="doctag">@code</span> '+'&#125; (&#123;<span class="doctag">@code</span> '\u005Cu002B'&#125;) to</span></span><br><span class="line"><span class="comment"> * indicate a positive value. The resulting integer value is</span></span><br><span class="line"><span class="comment"> * returned, exactly as if the argument and the radix 10 were</span></span><br><span class="line"><span class="comment"> * given as arguments to the &#123;<span class="doctag">@link</span> #parseInt(java.lang.String,</span></span><br><span class="line"><span class="comment"> * int)&#125; method.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span> s    a &#123;<span class="doctag">@code</span> String&#125; containing the &#123;<span class="doctag">@code</span> int&#125;</span></span><br><span class="line"><span class="comment"> *             representation to be parsed</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span>     the integer value represented by the argument in decimal.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@exception</span>  NumberFormatException  if the string does not contain a</span></span><br><span class="line"><span class="comment"> *               parsable integer.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="function"><span class="keyword">public</span> <span class="keyword">static</span> <span class="keyword">int</span> <span class="title">parseInt</span><span class="params">(String s)</span> <span class="keyword">throws</span> NumberFormatException </span>&#123;</span><br><span class="line">    <span class="keyword">return</span> parseInt(s,<span class="number">10</span>);</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>那一大段官方注释八成懒得看吧，我就简洁一点说。parseInt有两种方法，一种是带基数radix参数的，一种是不带的。</p><p>首先要注意的是parseInt方法返回的最终结果是一个int基本类型。</p><p>带有radix参数的方法的含义是，把字符串s按照radix进制进行处理（但是radix的含义不是完全是进制，注意！）。字符串中的字符除了第一位可以是<code>正号+</code>或<code>负号-</code>，其他位必须是<code>数字0-9</code>或<code>小写a-z、大写A-Z字母</code>，而且整个字符串代表的数字必须是整数，否则就会抛出NumberFormatException。此外，radix的取值返回需要落在<code>[2, 36]</code>，即 <code>java.lang.Character.[MIN_RADIX, MAX_RADIX]</code>的区间内。大于等于2因为小于2进制无意义，小于等于36因为z（或Z）字母所能代表的最大进制是35进制（0-9十个，英文字母26个）。</p><p>不带redix参数的方法实际上就是调用上面带radix参数的方法，把radix参数置为10。字符串的要求是除了第一位可以是<code>正号+</code>或<code>负号-</code>，其他位必须都是<code>数字0-9</code>。</p><p>网上说的一些特殊情况，包括字符串以<code>0x</code>开头就会默认解析成十六进制，字符串开头为<code>0</code>就会解析成八或十六进制数，这些我简单验证之后发现结果并非如此或者直接抛出异常，鉴于可能是运行环境或者java版本不同，所以这里暂不深究。</p><p><br></p><h1 id="二、valueOf源码"><a href="#二、valueOf源码" class="headerlink" title="二、valueOf源码"></a>二、valueOf源码</h1><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br><span class="line">43</span><br><span class="line">44</span><br><span class="line">45</span><br><span class="line">46</span><br><span class="line">47</span><br><span class="line">48</span><br><span class="line">49</span><br><span class="line">50</span><br><span class="line">51</span><br><span class="line">52</span><br><span class="line">53</span><br><span class="line">54</span><br><span class="line">55</span><br><span class="line">56</span><br><span class="line">57</span><br><span class="line">58</span><br><span class="line">59</span><br><span class="line">60</span><br><span class="line">61</span><br><span class="line">62</span><br><span class="line">63</span><br><span class="line">64</span><br><span class="line">65</span><br><span class="line">66</span><br><span class="line">67</span><br><span class="line">68</span><br><span class="line">69</span><br><span class="line">70</span><br><span class="line">71</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//Java 1.8 库中 valueOf 的两种方法源码</span></span><br><span class="line"></span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns an &#123;<span class="doctag">@code</span> Integer&#125; object holding the value</span></span><br><span class="line"><span class="comment"> * extracted from the specified &#123;<span class="doctag">@code</span> String&#125; when parsed</span></span><br><span class="line"><span class="comment"> * with the radix given by the second argument. The first argument</span></span><br><span class="line"><span class="comment"> * is interpreted as representing a signed integer in the radix</span></span><br><span class="line"><span class="comment"> * specified by the second argument, exactly as if the arguments</span></span><br><span class="line"><span class="comment"> * were given to the &#123;<span class="doctag">@link</span> #parseInt(java.lang.String, int)&#125;</span></span><br><span class="line"><span class="comment"> * method. The result is an &#123;<span class="doctag">@code</span> Integer&#125; object that</span></span><br><span class="line"><span class="comment"> * represents the integer value specified by the string.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * In other words, this method returns an &#123;<span class="doctag">@code</span> Integer&#125;</span></span><br><span class="line"><span class="comment"> * object equal to the value of:</span></span><br><span class="line"><span class="comment"> *  &#123;<span class="doctag">@code</span> new Integer(Integer.parseInt(s, radix))&#125;</span></span><br><span class="line"><span class="comment"> * </span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>      s   the string to be parsed.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>      radix the radix to be used in interpreting &#123;<span class="doctag">@code</span> s&#125;</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span>     an &#123;<span class="doctag">@code</span> Integer&#125; object holding the value</span></span><br><span class="line"><span class="comment"> *             represented by the string argument in the specified</span></span><br><span class="line"><span class="comment"> *             radix.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@exception</span> NumberFormatException if the &#123;<span class="doctag">@code</span> String&#125;</span></span><br><span class="line"><span class="comment"> *            does not contain a parsable &#123;<span class="doctag">@code</span> int&#125;.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Integer <span class="title">valueOf</span><span class="params">(String s, <span class="keyword">int</span> radix)</span> <span class="keyword">throws</span> NumberFormatException </span>&#123;</span><br><span class="line">     <span class="keyword">return</span> Integer.valueOf(parseInt(s,radix));</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns an &#123;<span class="doctag">@code</span> Integer&#125; object holding the</span></span><br><span class="line"><span class="comment"> * value of the specified &#123;<span class="doctag">@code</span> String&#125;. The argument is</span></span><br><span class="line"><span class="comment"> * interpreted as representing a signed decimal integer, exactly</span></span><br><span class="line"><span class="comment"> * as if the argument were given to the &#123;<span class="doctag">@link</span></span></span><br><span class="line"><span class="comment"> * #parseInt(java.lang.String)&#125; method. The result is an</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@code</span> Integer&#125; object that represents the integer value</span></span><br><span class="line"><span class="comment"> * specified by the string.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * In other words, this method returns an &#123;<span class="doctag">@code</span> Integer&#125;</span></span><br><span class="line"><span class="comment"> * object equal to the value of:</span></span><br><span class="line"><span class="comment"> *  &#123;<span class="doctag">@code</span> new Integer(Integer.parseInt(s))&#125;</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>      s   the string to be parsed.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span>     an &#123;<span class="doctag">@code</span> Integer&#125; object holding the value</span></span><br><span class="line"><span class="comment"> *             represented by the string argument.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@exception</span>  NumberFormatException  if the string cannot be parsed</span></span><br><span class="line"><span class="comment"> *             as an integer.</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Integer <span class="title">valueOf</span><span class="params">(String s)</span> <span class="keyword">throws</span> NumberFormatException </span>&#123;</span><br><span class="line">     <span class="keyword">return</span> Integer.valueOf(parseInt(s, <span class="number">10</span>));</span><br><span class="line"> &#125;</span><br><span class="line"> </span><br><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * Returns an &#123;<span class="doctag">@code</span> Integer&#125; instance representing the specified</span></span><br><span class="line"><span class="comment"> * &#123;<span class="doctag">@code</span> int&#125; value.  If a new &#123;<span class="doctag">@code</span> Integer&#125; instance is not</span></span><br><span class="line"><span class="comment"> * required, this method should generally be used in preference to</span></span><br><span class="line"><span class="comment"> * the constructor &#123;<span class="doctag">@link</span> #Integer(int)&#125;, as this method is likely</span></span><br><span class="line"><span class="comment"> * to yield significantly better space and time performance by</span></span><br><span class="line"><span class="comment"> * caching frequently requested values.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * This method will always cache values in the range -128 to 127,</span></span><br><span class="line"><span class="comment"> * inclusive, and may cache other values outside of this range.</span></span><br><span class="line"><span class="comment"> *</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@param</span>  i an &#123;<span class="doctag">@code</span> int&#125; value.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@return</span> an &#123;<span class="doctag">@code</span> Integer&#125; instance representing &#123;<span class="doctag">@code</span> i&#125;.</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@since</span>  1.5</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"> <span class="function"><span class="keyword">public</span> <span class="keyword">static</span> Integer <span class="title">valueOf</span><span class="params">(<span class="keyword">int</span> i)</span> </span>&#123;</span><br><span class="line">     <span class="keyword">if</span> (i &gt;= IntegerCache.low &amp;&amp; i &lt;= IntegerCache.high)</span><br><span class="line">         <span class="keyword">return</span> IntegerCache.cache[i + (-IntegerCache.low)];</span><br><span class="line">     <span class="keyword">return</span> <span class="keyword">new</span> Integer(i);</span><br><span class="line"> &#125;</span><br></pre></td></tr></table></figure><p>需要注意valueOf方法返回的最终结果是一个Integer类。</p><p>从源码可以看出，前两个valueOf方法同样有含radix参数和不含radix参数两种，但实际上都是调用了parseInt方法。先调用parseInt把字符串转成数字，然后调用第三个参数为int的valueOf(int)方法，最终返回一个Integer类。</p><p>在第三个valueOf(int)方法中我们可以看到，如果转出来的数字是在<code>[-128, 127]</code>区间内的话，会返回一个存在IntegerCache缓存中的Integer类，否则就new一个新的类再返回。这样的意义是预先产生一些常用数字的类放在缓存中，这样就有很大几率节省新建类的时间了。</p><p><br></p><h1 id="三、选用哪种方法"><a href="#三、选用哪种方法" class="headerlink" title="三、选用哪种方法"></a>三、选用哪种方法</h1><p>这个很难说，每个人都有不同的习惯，平时使用基本上不用刻意纠结，两者效率差不太多。</p><p>如果只是获取字符串代表的数值的话，优先推荐parseInt方法，因为它少了“装箱”的操作，单纯返回一个基本类型，所以稍稍更加高效。</p><p><br><br></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Java编程中字符串转数字是经常遇到的事，在Integer类下面有parseInt和valueOf两个方法，以前纠结过用哪个方法，现在就比较一下两个方法的区别。&lt;/p&gt;
    
    </summary>
    
      <category term="java" scheme="https://ultronxr.xyz/categories/java/"/>
    
    
      <category term="java" scheme="https://ultronxr.xyz/tags/java/"/>
    
  </entry>
  
  <entry>
    <title>使用 Navicat 的SSH连接远程服务器上的MySQL</title>
    <link href="https://ultronxr.xyz/2019/01/04/Connect-to-mysql-on-server-using-navicat/"/>
    <id>https://ultronxr.xyz/2019/01/04/Connect-to-mysql-on-server-using-navicat/</id>
    <published>2019-01-04T15:20:26.000Z</published>
    <updated>2019-01-04T16:19:01.795Z</updated>
    
    <content type="html"><![CDATA[<p>开发中会经常使用到服务器上的mysql，直接使用命令行对操作数据库多有不便。所以可以使用Navicat软件直接连接远程数据库进行操作。这里就简单说一下如何设置Navicat使用SSH远程连接数据库。</p><a id="more"></a><h1 id="一、设置服务器端mysql可以使用远程连接功能"><a href="#一、设置服务器端mysql可以使用远程连接功能" class="headerlink" title="一、设置服务器端mysql可以使用远程连接功能"></a>一、设置服务器端mysql可以使用远程连接功能</h1><p>这个在前面的文章里说过了，点击这个链接跳转到<a href="https://ultronxr.xyz/2019/01/02/Let-mysql-on-Ubuntu-use-remote-connections/">设置Ubuntu服务器上的MySQL可以使用远程连接</a></p><p><br></p><h1 id="二、设置Navicat的SSH连接和MySQL连接"><a href="#二、设置Navicat的SSH连接和MySQL连接" class="headerlink" title="二、设置Navicat的SSH连接和MySQL连接"></a>二、设置Navicat的SSH连接和MySQL连接</h1><h2 id="1-设置原理"><a href="#1-设置原理" class="headerlink" title="1.设置原理"></a>1.设置原理</h2><p>这里使用SSH连接远程的MySQL。</p><p>原理是 <code>SSH选项卡中的设置是使用SSH通道连接并登录你的服务器，常规选项卡中设置的是连接你的mysql；先使用SSH连接并登录你的服务器，再用localhost连接你的mysql</code>。</p><p>所以你应该在SSH选项卡的主机选项中填写远程服务器的公网ip，账户密码是你登录系统的账户名和密码；而在常规选项卡中的主机选项应该是localhost，账户密码则应该是mysql的账户名和密码。</p><p>有些博客上在常规选项卡中的主机写的不是localhost，是因为他没有通过SSH ！</p><p><br></p><h2 id="2-设置过程"><a href="#2-设置过程" class="headerlink" title="2.设置过程"></a>2.设置过程</h2><p>打开Navicat，点击左上角的 连接–&gt;MySQL 来新建一个连接；</p><p><div><img src="\assets\images-new\2019-01-04-Connect-to-mysql-on-server-using-navicat\1.png" align="absmiddle" width="100%" height="100%"></div> <br></p><p>在弹出的对话框中切换到SSH选项卡，勾上<code>使用SSH通道</code>复选框，在下面的主机输入框填写<code>远程服务器的公网ip</code>，账户名密码输入框填写<code>登录服务器的账户名和密码</code>，端口为<code>默认的SSH端口22</code>不变（如果修改过服务器ssh端口则需要另行修改）；</p><p><div><img src="\assets\images-new\2019-01-04-Connect-to-mysql-on-server-using-navicat\2.png" align="absmiddle" width="70%" height="70%"></div> <br></p><p>切换到常规选项卡，连接名随意填写，下面的主机输入框填写<code>localhost</code>，账户名密码输入框填写<code>登录mysql的账户名和密码</code>，端口为<code>默认的mysql端口3306</code>不变（如果修改过数据库端口则需另行修改）；</p><p><div><img src="\assets\images-new\2019-01-04-Connect-to-mysql-on-server-using-navicat\3.png" align="absmiddle" width="70%" height="70%"></div> <br></p><p>设置完后点击左下角的<code>测试连接</code>按钮，如果弹出连接成功说明设置完成。</p><p><div><img src="\assets\images-new\2019-01-04-Connect-to-mysql-on-server-using-navicat\4.png" align="absmiddle" width="70%" height="70%"></div> <br></p><p><div><img src="\assets\images-new\2019-01-04-Connect-to-mysql-on-server-using-navicat\5.png" align="absmiddle" width="70%" height="70%"></div> <br></p><p><br><br></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;开发中会经常使用到服务器上的mysql，直接使用命令行对操作数据库多有不便。所以可以使用Navicat软件直接连接远程数据库进行操作。这里就简单说一下如何设置Navicat使用SSH远程连接数据库。&lt;/p&gt;
    
    </summary>
    
      <category term="Ubuntu16.04LTS安装/配置全家桶" scheme="https://ultronxr.xyz/categories/Ubuntu16-04LTS%E5%AE%89%E8%A3%85-%E9%85%8D%E7%BD%AE%E5%85%A8%E5%AE%B6%E6%A1%B6/"/>
    
    
      <category term="ubuntu" scheme="https://ultronxr.xyz/tags/ubuntu/"/>
    
      <category term="mysql" scheme="https://ultronxr.xyz/tags/mysql/"/>
    
      <category term="navicat" scheme="https://ultronxr.xyz/tags/navicat/"/>
    
  </entry>
  
  <entry>
    <title>设置Ubuntu服务器上的MySQL可以使用远程连接</title>
    <link href="https://ultronxr.xyz/2019/01/02/Let-mysql-on-Ubuntu-use-remote-connections/"/>
    <id>https://ultronxr.xyz/2019/01/02/Let-mysql-on-Ubuntu-use-remote-connections/</id>
    <published>2019-01-02T08:13:43.000Z</published>
    <updated>2019-01-02T08:57:55.541Z</updated>
    
    <content type="html"><![CDATA[<p>设置Ubuntu服务器上的MySQL可以使用远程连接，用于给Navicat连接或者用代码进行数据库远程操作。</p><a id="more"></a><h1 id="一、开放服务器mysql端口"><a href="#一、开放服务器mysql端口" class="headerlink" title="一、开放服务器mysql端口"></a>一、开放服务器mysql端口</h1><p>默认mysql端口为3306，到服务器控制台的安全组策略中添加一条策略，包含以下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><span class="line">规则方向：入方向</span><br><span class="line">授权策略：允许</span><br><span class="line">协议类型：MYSQL(3306) 或 自定TCP</span><br><span class="line">端口范围：3306/3306</span><br><span class="line">优先级：1</span><br><span class="line">授权类型：IPv4地址段访问</span><br><span class="line">授权对象：你的ip地址/端口 或 0.0.0.0/0</span><br></pre></td></tr></table></figure><p>保存即可。</p><p><br></p><h1 id="二、修改mysql配置文件"><a href="#二、修改mysql配置文件" class="headerlink" title="二、修改mysql配置文件"></a>二、修改mysql配置文件</h1><p>使用<code>netstat -an | grep 3306</code>命令查看系统监听的对应于3306端口的ip，发现是127.0.0.1:3306，说明只监听了本地的3306端口。</p><p>mysql默认配置文件为<code>/etc/mysql/mysql.conf.d/mysqld.cnf</code>文件（有些博客写的不是这个文件），找到下面这一行，在行首添加#号把这行注释掉：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">bind-address          = 127.0.0.1</span><br></pre></td></tr></table></figure><p>保存退出。</p><p>重启mysql服务（具体命令看步骤三的内容），再使用<code>netstat -an | grep 3306</code>命令查看，监听的ip变成:::3306即可。</p><p><br></p><h1 id="三、重启mysql服务"><a href="#三、重启mysql服务" class="headerlink" title="三、重启mysql服务"></a>三、重启mysql服务</h1><p>以下为所有mysql启动、停止、重启命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br></pre></td><td class="code"><pre><span class="line">启动mysql：</span><br><span class="line">sudo /etc/init.d/mysql start</span><br><span class="line">    或</span><br><span class="line">sudo service mysql start</span><br><span class="line"></span><br><span class="line">停止mysql：</span><br><span class="line">sudo /etc/init.d/mysql stop</span><br><span class="line">    或</span><br><span class="line">sudo service mysql stop</span><br><span class="line"></span><br><span class="line">重启mysql：</span><br><span class="line">sudo/etc/init.d/mysql restart</span><br><span class="line">    或</span><br><span class="line">sudo service mysql restart</span><br></pre></td></tr></table></figure><p><br></p><h1 id="四、修改mysql权限"><a href="#四、修改mysql权限" class="headerlink" title="四、修改mysql权限"></a>四、修改mysql权限</h1><p>使用 <code>mysql -u root -p</code>命令输入密码登录mysql，依次运行以下命令：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">use mysql;</span><br><span class="line">update user set host = &apos;%&apos; where user = &apos;root&apos;;</span><br><span class="line">FLUSH PRIVILEGES;</span><br></pre></td></tr></table></figure><p>大功告成！</p><p><br><br></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;设置Ubuntu服务器上的MySQL可以使用远程连接，用于给Navicat连接或者用代码进行数据库远程操作。&lt;/p&gt;
    
    </summary>
    
      <category term="Ubuntu16.04LTS安装/配置全家桶" scheme="https://ultronxr.xyz/categories/Ubuntu16-04LTS%E5%AE%89%E8%A3%85-%E9%85%8D%E7%BD%AE%E5%85%A8%E5%AE%B6%E6%A1%B6/"/>
    
    
      <category term="ubuntu" scheme="https://ultronxr.xyz/tags/ubuntu/"/>
    
      <category term="mysql" scheme="https://ultronxr.xyz/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu 16.04 LTS 的apt换源</title>
    <link href="https://ultronxr.xyz/2018/12/25/Change-default-apt-source-to-ali-source-in-ubuntu16-04LTS/"/>
    <id>https://ultronxr.xyz/2018/12/25/Change-default-apt-source-to-ali-source-in-ubuntu16-04LTS/</id>
    <published>2018-12-25T02:46:41.000Z</published>
    <updated>2018-12-25T05:34:44.553Z</updated>
    
    <content type="html"><![CDATA[<p>为了apt安装和更新加快速度，这里选择把默认源更换成阿里源。</p><a id="more"></a><h1 id="一、备份系统默认源"><a href="#一、备份系统默认源" class="headerlink" title="一、备份系统默认源"></a>一、备份系统默认源</h1><p><code>sudo mv /etc/apt/sources.list /etc/apt/sources.list.bak</code></p><p><br></p><h1 id="二、查看系统版本详细信息"><a href="#二、查看系统版本详细信息" class="headerlink" title="二、查看系统版本详细信息"></a>二、查看系统版本详细信息</h1><p><code>lsb_release -c</code></p><p>查看列出的系统信息的<code>Codename</code>一项后面的值，注意这里不同版本的Ubuntu的值是不同的，不要搞错！！！</p><p>记住上面的值，例如Ubuntu 16.04 LTS的Codename一般是<code>xenial</code>，其他的一般如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><span class="line">Ubuntu 12.04 (LTS)代号为precise</span><br><span class="line"></span><br><span class="line">Ubuntu 14.04 (LTS)代号为trusty</span><br><span class="line"></span><br><span class="line">Ubuntu 15.04 代号为vivid</span><br><span class="line"></span><br><span class="line">Ubuntu 15.10 代号为wily</span><br><span class="line"></span><br><span class="line">Ubuntu 16.04 (LTS)代号为xenial</span><br></pre></td></tr></table></figure><p><br></p><h1 id="三、新建-etc-apt-sources-list-并修改内容"><a href="#三、新建-etc-apt-sources-list-并修改内容" class="headerlink" title="三、新建 /etc/apt/sources.list 并修改内容"></a>三、新建 <code>/etc/apt/sources.list</code> 并修改内容</h1><p><code>sudo vim /etc/apt/sources.list</code></p><p>如果第二步的Codename的值是<code>xenial</code>的话，直接加入以下内容即可：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br></pre></td><td class="code"><pre><span class="line">deb-src http://archive.ubuntu.com/ubuntu xenial main restricted</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial main restricted</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial main restricted multiverse universe</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricted</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial-updates main restricted multiverse universe</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial universe</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-updates universe</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-updates multiverse</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiverse</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial-backports main restricted universe multiverse</span><br><span class="line">deb http://archive.canonical.com/ubuntu xenial partner</span><br><span class="line">deb-src http://archive.canonical.com/ubuntu xenial partner</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-security main restricted</span><br><span class="line">deb-src http://mirrors.aliyun.com/ubuntu/ xenial-security main restricted multiverse universe</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-security universe</span><br><span class="line">deb http://mirrors.aliyun.com/ubuntu/ xenial-security multiverse</span><br></pre></td></tr></table></figure><p>其他的版本的话，需要把上面内容中的<code>xenial</code>改成其他版本的Codename再添加。</p><p><br></p><h1 id="四、更新apt使其生效"><a href="#四、更新apt使其生效" class="headerlink" title="四、更新apt使其生效"></a>四、更新apt使其生效</h1><p><code>sudo apt-get update</code></p><p><br></p><h1 id="五、备注"><a href="#五、备注" class="headerlink" title="五、备注"></a>五、备注</h1><p>这里顺便备注一下，<code>apt-get update</code>和<code>apt-get upgrade</code>的区别：</p><p>前者是更新系统软件列表，后者是更新软件；</p><p>所以更新软件时应该先update一下再upgrade。</p><p><br><br></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;为了apt安装和更新加快速度，这里选择把默认源更换成阿里源。&lt;/p&gt;
    
    </summary>
    
      <category term="Ubuntu16.04LTS安装/配置全家桶" scheme="https://ultronxr.xyz/categories/Ubuntu16-04LTS%E5%AE%89%E8%A3%85-%E9%85%8D%E7%BD%AE%E5%85%A8%E5%AE%B6%E6%A1%B6/"/>
    
    
      <category term="apt" scheme="https://ultronxr.xyz/tags/apt/"/>
    
      <category term="ubuntu" scheme="https://ultronxr.xyz/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu 16.04 LTS 简易安装mysql</title>
    <link href="https://ultronxr.xyz/2018/12/25/Installation-of-mysql-in-ubuntu16-04LTS/"/>
    <id>https://ultronxr.xyz/2018/12/25/Installation-of-mysql-in-ubuntu16-04LTS/</id>
    <published>2018-12-25T02:43:18.000Z</published>
    <updated>2018-12-25T03:33:07.811Z</updated>
    
    <content type="html"><![CDATA[<p>完全使用命令行安装mysql。</p><a id="more"></a><h1 id="一、安装"><a href="#一、安装" class="headerlink" title="一、安装"></a>一、安装</h1><p>依次执行以下命令：</p><p><code>sudo apt-get install mysql-server</code></p><p><code>sudo apt-get install mysql-client</code></p><p><code>sudo apt-get install libmysqlclient-dev</code></p><p>安装过程中会有一个粉红色界面让你输入数据库root用户的密码，输好之后不要忘了。</p><p><br></p><h1 id="二、登录数据库验证"><a href="#二、登录数据库验证" class="headerlink" title="二、登录数据库验证"></a>二、登录数据库验证</h1><p>输入以下命令，以root用户身份输入密码的形式登录数据库：</p><p><code>mysql -u root -p</code></p><p>输入密码回车，如果提示欢迎登录数据库，然后命令行的标志变成了<code>mysql&gt;</code>，说明安装成功。</p><p>可以输入<code>show databases;</code>查看所有存在的数据库。</p><p>注意mysql命令最后要带分号才是完整的。</p><p><br><br></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;完全使用命令行安装mysql。&lt;/p&gt;
    
    </summary>
    
      <category term="Ubuntu16.04LTS安装/配置全家桶" scheme="https://ultronxr.xyz/categories/Ubuntu16-04LTS%E5%AE%89%E8%A3%85-%E9%85%8D%E7%BD%AE%E5%85%A8%E5%AE%B6%E6%A1%B6/"/>
    
    
      <category term="ubuntu" scheme="https://ultronxr.xyz/tags/ubuntu/"/>
    
      <category term="mysql" scheme="https://ultronxr.xyz/tags/mysql/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu 16.04 LTS 下安装Tomcat 8</title>
    <link href="https://ultronxr.xyz/2018/12/25/Installation-of-tomcat8-in-ubuntu16-04LTS/"/>
    <id>https://ultronxr.xyz/2018/12/25/Installation-of-tomcat8-in-ubuntu16-04LTS/</id>
    <published>2018-12-25T02:43:09.000Z</published>
    <updated>2018-12-25T06:17:53.965Z</updated>
    
    <content type="html"><![CDATA[<p>Ubuntu 16.04 LTS 下安装Tomcat 8 。</p><a id="more"></a><h1 id="一、下载Tomcat8压缩包"><a href="#一、下载Tomcat8压缩包" class="headerlink" title="一、下载Tomcat8压缩包"></a>一、下载Tomcat8压缩包</h1><p>如果知道确切的下载链接的话，可以直接使用wget命令直接下载到Ubuntu，否则可以先下载到Windows再上传到Ubuntu。</p><p>这里使用后者方法，请另行下载Tomcat8的压缩包：</p><p><code>apache-tomcat-8.5.23.tar.gz</code></p><p>用ftp工具把压缩包上传到Ubuntu，这里以上传到<code>~/temp/</code>目录为例。</p><p><br></p><h1 id="二、解压到指定目录"><a href="#二、解压到指定目录" class="headerlink" title="二、解压到指定目录"></a>二、解压到指定目录</h1><p>进入/usr/local/目录，创建tomcat文件夹：</p><p><code>cd /usr/local</code></p><p><code>mkdir tomcat</code></p><p>把压缩包移动到/usr/local/tomcat/目录并解压：</p><p><code>mv ~/temp/apache-tomcat-8.5.23.tar.gz /usr/local/tomcat/</code></p><p><code>tar -zxvf apache-tomcat-8.5.23.tar.gz</code></p><p>解压出来的应该是一个名为<code>apache-tomcat-8.5.23</code>的文件夹。</p><p><br></p><h1 id="三、配置Tomcat"><a href="#三、配置Tomcat" class="headerlink" title="三、配置Tomcat"></a>三、配置Tomcat</h1><p>修改环境变量：</p><p><code>sudo vim /etc/profile</code></p><p>添加以下内容（md代码块前带有行号，请不要连行号一起复制！）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">#tomcat</span><br><span class="line">export TOMCAT_HOME=/usr/local/tomcat/apache-tomcat-8.5.23</span><br></pre></td></tr></table></figure><p>保存退出，运行以下命令使环境变量生效：</p><p><code>source /etc/profile</code></p><p><br></p><h1 id="四、启动和停止Tomcat"><a href="#四、启动和停止Tomcat" class="headerlink" title="四、启动和停止Tomcat"></a>四、启动和停止Tomcat</h1><p>进入Tomcat安装目录：</p><p><code>cd /usr/local/tomcat/apache-tomcat-8.5.23/bin/</code></p><p>运行启动脚本：</p><p><code>./startup.sh</code></p><p>如果最后显示 Tomcat started. 的内容，说明Tomcat启动成功。</p><p>另外，停止运行的脚本也在相同目录下，运行即可：</p><p><code>./shutdown.sh</code></p><p>注意：如果在运行脚本时提示权限问题，无法运行，请使用chmod添加运行权限。</p><p><br></p><h1 id="五、验证Tomcat是否启动成功"><a href="#五、验证Tomcat是否启动成功" class="headerlink" title="五、验证Tomcat是否启动成功"></a>五、验证Tomcat是否启动成功</h1><p>如果只在Ubuntu中验证，可以使用如下命令：</p><p><code>curl 127.0.0.1:8080</code></p><p>如果显示了Tomcat欢迎页面的HTML代码，则说明运行成功：</p><figure class="highlight html"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br><span class="line">28</span><br><span class="line">29</span><br><span class="line">30</span><br><span class="line">31</span><br><span class="line">32</span><br><span class="line">33</span><br><span class="line">34</span><br><span class="line">35</span><br><span class="line">36</span><br><span class="line">37</span><br><span class="line">38</span><br><span class="line">39</span><br><span class="line">40</span><br><span class="line">41</span><br><span class="line">42</span><br></pre></td><td class="code"><pre><span class="line"></span><br><span class="line"><span class="meta">&lt;!DOCTYPE html&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">html</span> <span class="attr">lang</span>=<span class="string">"en"</span>&gt;</span></span><br><span class="line">    <span class="tag">&lt;<span class="name">head</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">meta</span> <span class="attr">charset</span>=<span class="string">"UTF-8"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">title</span>&gt;</span>Apache Tomcat/8.5.23<span class="tag">&lt;/<span class="name">title</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"favicon.ico"</span> <span class="attr">rel</span>=<span class="string">"icon"</span> <span class="attr">type</span>=<span class="string">"image/x-icon"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"favicon.ico"</span> <span class="attr">rel</span>=<span class="string">"shortcut icon"</span> <span class="attr">type</span>=<span class="string">"image/x-icon"</span> /&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">link</span> <span class="attr">href</span>=<span class="string">"tomcat.css"</span> <span class="attr">rel</span>=<span class="string">"stylesheet"</span> <span class="attr">type</span>=<span class="string">"text/css"</span> /&gt;</span></span><br><span class="line">    <span class="tag">&lt;/<span class="name">head</span>&gt;</span></span><br><span class="line"></span><br><span class="line">    <span class="tag">&lt;<span class="name">body</span>&gt;</span></span><br><span class="line">        <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"wrapper"</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"navigation"</span> <span class="attr">class</span>=<span class="string">"curved container"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"nav-home"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://tomcat.apache.org/"</span>&gt;</span>Home<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"nav-hosts"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/docs/"</span>&gt;</span>Documentation<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"nav-config"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/docs/config/"</span>&gt;</span>Configuration<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"nav-examples"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/examples/"</span>&gt;</span>Examples<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"nav-wiki"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://wiki.apache.org/tomcat/FrontPage"</span>&gt;</span>Wiki<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"nav-lists"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://tomcat.apache.org/lists.html"</span>&gt;</span>Mailing Lists<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">span</span> <span class="attr">id</span>=<span class="string">"nav-help"</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"http://tomcat.apache.org/findhelp.html"</span>&gt;</span>Find Help<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">span</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">br</span> <span class="attr">class</span>=<span class="string">"separator"</span> /&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"asf-box"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">h1</span>&gt;</span>Apache Tomcat/8.5.23<span class="tag">&lt;/<span class="name">h1</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">            <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"upper"</span> <span class="attr">class</span>=<span class="string">"curved container"</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"congrats"</span> <span class="attr">class</span>=<span class="string">"curved container"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">h2</span>&gt;</span>If you're seeing this, you've successfully installed Tomcat. Congratulations!<span class="tag">&lt;/<span class="name">h2</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"notice"</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">img</span> <span class="attr">src</span>=<span class="string">"tomcat.png"</span> <span class="attr">alt</span>=<span class="string">"[tomcat logo]"</span> /&gt;</span></span><br><span class="line">                    <span class="tag">&lt;<span class="name">div</span> <span class="attr">id</span>=<span class="string">"tasks"</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">h3</span>&gt;</span>Recommended Reading:<span class="tag">&lt;/<span class="name">h3</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">h4</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/docs/security-howto.html"</span>&gt;</span>Security Considerations HOW-TO<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">h4</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/docs/manager-howto.html"</span>&gt;</span>Manager Application HOW-TO<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">                        <span class="tag">&lt;<span class="name">h4</span>&gt;</span><span class="tag">&lt;<span class="name">a</span> <span class="attr">href</span>=<span class="string">"/docs/cluster-howto.html"</span>&gt;</span>Clustering/Session Replication HOW-TO<span class="tag">&lt;/<span class="name">a</span>&gt;</span><span class="tag">&lt;/<span class="name">h4</span>&gt;</span></span><br><span class="line">                    <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                <span class="tag">&lt;/<span class="name">div</span>&gt;</span></span><br><span class="line">                </span><br><span class="line">    <span class="comment">&lt;!-- 下面还有很多，这里省略 --&gt;</span></span><br><span class="line">    <span class="comment">&lt;!-- 下面还有很多，这里省略 --&gt;</span></span><br></pre></td></tr></table></figure><p>或者也可以直接访问Ubuntu的公网ip的8080端口，会显示Tomcat欢迎页面（针对Ubuntu服务器）。</p><p><br></p><h1 id="六、修改端口"><a href="#六、修改端口" class="headerlink" title="六、修改端口"></a>六、修改端口</h1><p>默认的Tomcat端口为8080端口，一般在安装后都会修改成80端口，以下是修改方法（修改前先停止Tomcat运行！！！）：</p><p>修改Tomcat配置文件：</p><p><code>vim /usr/local/tomcat/apache-tomcat-8.5.23/conf/server.xml</code></p><p>找到如下内容：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Connector</span> <span class="attr">port</span>=<span class="string">"8080"</span> <span class="attr">protocol</span>=<span class="string">"HTTP/1.1"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">connectionTimeout</span>=<span class="string">"20000"</span></span></span><br><span class="line"><span class="tag">           <span class="attr">redirectPort</span>=<span class="string">"8443"</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>把其中的port=”8080”修改成port=”80”，保存退出，重启Tomcat即可生效。</p><p>但是还有一种特殊情况，即单单修改这里是无效的，这里暂时先不讨论。</p><p><br></p><h1 id="七、设置Tomcat-Manager"><a href="#七、设置Tomcat-Manager" class="headerlink" title="七、设置Tomcat Manager"></a>七、设置Tomcat Manager</h1><p>Tomcat首页默认是有自带的Manager管理程序，即三个按钮Server Status、Manager App、Host Manager是可以进行管理员登录然后查看Tomcat运行状况的。</p><p>如果不手动配置，点击进去是404页面。下面是配置方法（同样配置前先停止Tomcat！！！）：</p><p>修改tomcat-users.xml配置文件：</p><p><code>vim /usr/local/tomcat/apache-tomcat-8.5.23/conf/tomcat-users.xml</code></p><p>在<code>&lt;tomcat-users&gt;</code>和<code>&lt;tomcat-users/&gt;</code>标签之间添加以下内容：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">role</span> <span class="attr">rolename</span>=<span class="string">"manager-gui"</span>/&gt;</span></span><br><span class="line"><span class="tag">&lt;<span class="name">user</span> <span class="attr">username</span>=<span class="string">"replace me"</span> <span class="attr">password</span>=<span class="string">"replace me"</span> <span class="attr">roles</span>=<span class="string">"manager-gui"</span>/&gt;</span></span><br></pre></td></tr></table></figure><p>把其中的两个replace me分别修改成用户名和密码，保存退出即可。</p><p>重启服务器，点击首页的管理按钮，输入账户名和密码即可查看Tomcat运行状态。</p><p>注意：服务器上配置了Tomcat Manager默认只能从本地访问，如果需要远程访问，请修改以下配置文件：</p><p><code>vim /usr/local/tomcat/apache-tomcat-8.5.23/webapps/manager/META-INF/context.xml</code></p><p>找到如下内容：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Valve</span> <span class="attr">className</span>=<span class="string">"org.apache.catalina.valves.RemoteAddrValve"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">allow</span>=<span class="string">"127\.\d+\.\d+\.\d+|::1|0:0:0:0:0:0:0:1"</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>其中的allow的值就是允许访问Tomcat Manager的ip地址，可以看到默认只允许本地ip访问，可以在allow的值的末尾添加一个竖线然后写上自己的ip。</p><p>如添加之后为：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="tag">&lt;<span class="name">Valve</span> <span class="attr">className</span>=<span class="string">"org.apache.catalina.valves.RemoteAddrValve"</span></span></span><br><span class="line"><span class="tag">       <span class="attr">allow</span>=<span class="string">"127\.\d+\.\d+\.\d+|::1|0:0:0:0:0:0:0:1|152.163.163.163"</span> /&gt;</span></span><br></pre></td></tr></table></figure><p>保存退出，重启Tomcat即可生效。</p><p><br></p><h1 id="八、备注"><a href="#八、备注" class="headerlink" title="八、备注"></a>八、备注</h1><p>tomcat安装目录<br><code>/usr/local/tomcat/apache-tomcat-8.5.23</code></p><p>webapp包目录<br><code>/usr/local/tomcat/apache-tomcat-8.5.23/webapps</code></p><p>启动tomcat命令<br><code>/usr/local/tomcat/apache-tomcat-8.5.23/bin/startup.sh</code></p><p>停止tomcat命令<br><code>/usr/local/tomcat/apache-tomcat-8.5.23/bin/shutdown.sh</code></p><p><br> <br></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Ubuntu 16.04 LTS 下安装Tomcat 8 。&lt;/p&gt;
    
    </summary>
    
      <category term="Ubuntu16.04LTS安装/配置全家桶" scheme="https://ultronxr.xyz/categories/Ubuntu16-04LTS%E5%AE%89%E8%A3%85-%E9%85%8D%E7%BD%AE%E5%85%A8%E5%AE%B6%E6%A1%B6/"/>
    
    
      <category term="tomcat" scheme="https://ultronxr.xyz/tags/tomcat/"/>
    
      <category term="ubuntu" scheme="https://ultronxr.xyz/tags/ubuntu/"/>
    
  </entry>
  
  <entry>
    <title>Ubuntu 16.04 LTS 下安装JDK1.8和JRE</title>
    <link href="https://ultronxr.xyz/2018/12/25/Setting-up-of-jdk1-8-in-ubuntu16-04LTS/"/>
    <id>https://ultronxr.xyz/2018/12/25/Setting-up-of-jdk1-8-in-ubuntu16-04LTS/</id>
    <published>2018-12-25T02:42:42.000Z</published>
    <updated>2018-12-25T05:39:52.437Z</updated>
    
    <content type="html"><![CDATA[<p>Ubuntu 16.04 LTS 下安装JDK1.8和JRE。</p><a id="more"></a><h1 id="一、下载JDK1-8的压缩包（64位）"><a href="#一、下载JDK1-8的压缩包（64位）" class="headerlink" title="一、下载JDK1.8的压缩包（64位）"></a>一、下载JDK1.8的压缩包（64位）</h1><p>如果知道确切的下载链接的话，可以直接使用wget命令直接下载到Ubuntu，否则可以先下载到Windows再上传到Ubuntu。</p><p>这里使用后者方法，请另行下载JDK1.8的压缩包：</p><p><code>jdk-8u181-linux-x64.tar.gz</code> （里面自带JRE）</p><p>用ftp工具把压缩包上传到Ubuntu，这里以上传到<code>~/temp/</code>目录为例。</p><p><br></p><h1 id="二、解压到指定目录"><a href="#二、解压到指定目录" class="headerlink" title="二、解压到指定目录"></a>二、解压到指定目录</h1><p>进入/usr/lib/目录，创建java文件夹：</p><p><code>cd /usr/lib</code></p><p><code>mkdir java</code></p><p>把压缩包移动到/usr/lib/java/目录并解压：</p><p><code>mv ~/temp/jdk-8u181-linux-x64.tar.gz /usr/lib/java/</code></p><p><code>tar -zxvf jdk-8u181-linux-x64.tar.gz</code></p><p>解压出来的应该是一个名为<code>jdk1.8.0_181</code>的文件夹。</p><p><br></p><h1 id="三、配置环境变量"><a href="#三、配置环境变量" class="headerlink" title="三、配置环境变量"></a>三、配置环境变量</h1><p>修改环境变量文件：</p><p><code>sudo vim /etc/profile</code></p><p>在末尾添加如下内容（md代码块前带有行号，请不要连行号一起复制！）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><span class="line">#set java environment</span><br><span class="line">export JAVA_HOME=/usr/lib/java/jdk1.8.0_181</span><br><span class="line">export JRE_HOME=$&#123;JAVA_HOME&#125;/jre</span><br><span class="line">export CLASSPATH=.:%&#123;JAVA_HOME&#125;/lib:%&#123;JRE_HOME&#125;/lib</span><br><span class="line">export PATH=$&#123;JAVA_HOME&#125;/bin:$PATH</span><br></pre></td></tr></table></figure><p>保存退出，使用以下命令使环境变量生效：</p><p><code>source /etc/profile</code></p><p><br></p><h1 id="四、验证是否安装成功"><a href="#四、验证是否安装成功" class="headerlink" title="四、验证是否安装成功"></a>四、验证是否安装成功</h1><p>输入<code>java -version</code>命令，如果显示以下内容则配置完成：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">java version &quot;1.8.0_181&quot;</span><br><span class="line">Java(TM) SE Runtime Environment (build 1.8.0_181-b13)</span><br><span class="line">Java HotSpot(TM) 64-Bit Server VM (build 25.181-b13, mixed mode)</span><br></pre></td></tr></table></figure><p><br></p><h1 id="五、提醒"><a href="#五、提醒" class="headerlink" title="五、提醒"></a>五、提醒</h1><p>请注意下载的JDK是32位（x86）的还是64位（x64）的，不符合要求的JDK即使配置完成也无法使用！！</p><p><br><br></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;Ubuntu 16.04 LTS 下安装JDK1.8和JRE。&lt;/p&gt;
    
    </summary>
    
      <category term="Ubuntu16.04LTS安装/配置全家桶" scheme="https://ultronxr.xyz/categories/Ubuntu16-04LTS%E5%AE%89%E8%A3%85-%E9%85%8D%E7%BD%AE%E5%85%A8%E5%AE%B6%E6%A1%B6/"/>
    
    
      <category term="jdk" scheme="https://ultronxr.xyz/tags/jdk/"/>
    
      <category term="ubuntu" scheme="https://ultronxr.xyz/tags/ubuntu/"/>
    
      <category term="jre" scheme="https://ultronxr.xyz/tags/jre/"/>
    
  </entry>
  
  <entry>
    <title>word和pdf的比较——为什么正式场合更多使用pdf</title>
    <link href="https://ultronxr.xyz/2018/12/25/Comparison-of-pdf-and-word/"/>
    <id>https://ultronxr.xyz/2018/12/25/Comparison-of-pdf-and-word/</id>
    <published>2018-12-24T16:03:46.000Z</published>
    <updated>2019-01-02T09:04:07.485Z</updated>
    
    <content type="html"><![CDATA[<p>学习工作中，word的格式排版确实让人伤脑筋。而说到word，则不得不提在正式场合更多使用的pdf格式。正巧前几天看到了一遍关于这个的博客写得很好，我这里简单总结一下，比较一下两者的特点和不同，两者的格式转换为什么这么困难，以及为什么正式场合更多使用pdf而不是word。</p><a id="more"></a><h1 id="一、word和pdf的特点"><a href="#一、word和pdf的特点" class="headerlink" title="一、word和pdf的特点"></a>一、word和pdf的特点</h1><p>pdf格式有“通用性好”、“格式不易变化”等特点。其中“通用性好”指的是不论是在什么平台或者用什么版本的pdf阅读器打开pdf文件，pdf总是能够展现出相对正确的格式。“格式不易变化”则是指一个pdf文件一旦生成，他就会一直保持相对稳定的格式，不会变化。而反观word，仅仅是换了台计算机打开，其中的文本格式和字体等可能就会发生变化，让人难以阅读，更别说不同的人用着不同版本的word了。</p><p>但是pdf也有一些让人“敬而远之”的缺点。第一就是“无法复制”，大部分的pdf文件都无法通过简单的“选择——复制”操作来复制其中的“文本”，这恐怕是学生党最不喜欢pdf的地方了o(╥﹏╥)o，连简单的复制都没法实现，怎么不学学word？？？第二则是“难以编辑”，就连复制都难，更别提修改其中的内容了。在这点上，word就显得使用更加简单了。</p><p>word和pdf为什么会有如此大的不同？下面我会简单谈谈word和pdf的原理，从而解答这些问题。</p><p><br> <br></p><h1 id="二、word和pdf的实现原理"><a href="#二、word和pdf的实现原理" class="headerlink" title="二、word和pdf的实现原理"></a>二、word和pdf的实现原理</h1><h2 id="1-word的实现原理"><a href="#1-word的实现原理" class="headerlink" title="1.word的实现原理"></a>1.word的实现原理</h2><p>首先，word的实现原理是<code>标记语言 (Markup Language) 文档</code>，啥意思？就是说word中的文本显示效果是通过在文本周围加上属性标签来实现控制显示样式等操作的，下面是一个简单的例子：</p><p>新建一张空白word，在中间打上“Hello world!”一行文字，设置水平居中，对doc文件进行解包处理，得到的相关结果如下：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><span class="line">&lt;w:pPr&gt;&lt;w:jcw:val=&quot;center&quot;/&gt;&lt;w:rPr&gt;</span><br><span class="line">&lt;w:rFontsw:ascii=&quot;Times&quot;w:hAnsi=&quot;Times&quot;/&gt;&lt;w:langw:val=&quot;en-US&quot;/&gt;</span><br><span class="line">&lt;/w:rPr&gt;&lt;/w:pPr&gt;&lt;w:rw:rsidRPr=&quot;003C75CF&quot;&gt;&lt;w:rPr&gt;</span><br><span class="line">&lt;w:rFontsw:ascii=&quot;Times&quot;w:hAnsi=&quot;Times&quot;/&gt;&lt;/w:rPr&gt;&lt;w:t&gt;Hello world!&lt;/w:t&gt;&lt;/w:r&gt;</span><br></pre></td></tr></table></figure><p>现在可以很清楚得看到，代码中全是属性标签。从包含了输入内容的最后一行代码看起，字体在w:rFontsw标签中定义为Times，第一行的w:jcw标签控制的是段落样式center居中对齐。</p><p>这就是标记语言，实际上和HTML等文件的工作原理类似。</p><p><br> <br></p><h2 id="2-pdf的实现原理"><a href="#2-pdf的实现原理" class="headerlink" title="2.*pdf的实现原理"></a>2.*pdf的实现原理</h2><p><code>pdf的本质就是数字化的纸张，计算机对pdf的操作实际上是打印</code></p><p>首先pdf，可以理解为“电子版的虚拟打印”，就是实体文档在计算机中的影像，而不是实际的文本。计算机对pdf的操作可以理解为“模拟对一张实际的纸张的操作”，例如进行pdf的复制操作，可以理解为“把一张纸上的内容抄写到另一张纸上”，计算机并不知道它抄写的是什么，只是“依样画葫芦”地抄写，而不是复制。</p><p>知道了这个，就不难理解为什么pdf有难以编辑的缺点了，一份pdf打印出来之后，它的内容，包括文字的内容，文字相对于纸张的位置，文字的字体、大小等都被确定了，很难被改变。</p><p>其他格式的文件格式都是“新建”或者“保存”的，而pdf则是“导出”或者是“打印”的，这也说明了pdf的“数字化纸张”的特点。</p><p>下面同样以一份pdf文件，其中居中打印了“Hello world!”文本的源码来作说明：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">BT10011036572 Tm /TT1 12 Tf [ (He) 24 (l) -48 (l) -48 (o) ]TJETBT </span><br><span class="line">10011147572 Tm /TT1 12 Tf ( ) TjETBT </span><br><span class="line">10011160572 Tm /TT1 12 Tf [ (w) 24 (or) -84 (l) -24 (d) ] TJET</span><br></pre></td></tr></table></figure><p>这些符号也许会让你一头雾水，但是查阅相关资料，进行可读化“翻译”之后，则是以下内容：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line">【文字开始】 缩放比例1倍 坐标(1036,572) 【文字定位】 /TT1 12磅 【选择字体】 [ (He) 间距24 (l) 间距-48 (l) 间距-48 (o) ] 【绘制文字】【文字结束】</span><br><span class="line">【文字开始】 缩放比例1倍 坐标(1147,572) 【文字定位】 /TT1 12磅 【选择字体】 (空格) 【绘制文字】【文字结束】</span><br><span class="line">【文字开始】 缩放比例1倍 坐标(1060,572) 【文字定位】 /TT1 12磅 【选择字体】 [ (w) 间距24 (or) 间距-84 (l) 间距-24 (d) ] 【绘制文字】【文字结束】</span><br></pre></td></tr></table></figure><p>我们不难想象这是一种刻板的机械动作，计算机控制了一支笔，不断修改笔触的位置和大小，在数字纸张上画下内容。因此，用“打印”来形容计算机处理pdf文件内容的过程最合适不过。</p><p><br> <br></p><h1 id="三、为什么word的格式容易走样？"><a href="#三、为什么word的格式容易走样？" class="headerlink" title="三、为什么word的格式容易走样？"></a>三、为什么word的格式容易走样？</h1><p>了解了实现原理，解释起来就简单多了，word的标记语言尽管十分方便，可以随意修改，复制，变换；但是这也留了很大的漏洞，比如Times字体究竟长什么样，我这里找不到Times模版怎么办？又比如居中是怎样居中，居中的参考系是什么？这些问题都留给word文档处理软件来处理，这就需要不同的word文档处理软件统一标准，但是这又谈何容易，微软一家的word软件在不同版本情况下处理同一个问题的解决方法都是不同的。。。-_-||</p><p><br> <br></p><h1 id="四、为什么正式场合更多使用pdf？"><a href="#四、为什么正式场合更多使用pdf？" class="headerlink" title="四、为什么正式场合更多使用pdf？"></a>四、为什么正式场合更多使用pdf？</h1><p>答：pdf样式不容易变化，而且方便直接进行实体打印。</p><p>所以下次交简历的时候尽量不要发一份word给HR了，鬼知道HR用的是哪一年版本的word！！！（开玩笑的啦-.-）</p><p><br> <br></p><h1 id="五、链接资源"><a href="#五、链接资源" class="headerlink" title="五、链接资源"></a>五、链接资源</h1><p>我的这篇博客主要对下面这篇博客总结，有些更加详细的问题和解释内容并没有提及，所以有兴趣的话可以进入下面这篇博客深入学习。在此表示感谢。（侵删！！！）</p><p><a href="https://baijiahao.baidu.com/s?id=1613317718725473046&amp;wfr=spider&amp;for=pc&amp;isFailFlag=1" target="_blank" rel="noopener">为什么 PDF 是最好的「文件格式」｜ 科普</a></p><p><br> <br> <br> <br></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;学习工作中，word的格式排版确实让人伤脑筋。而说到word，则不得不提在正式场合更多使用的pdf格式。正巧前几天看到了一遍关于这个的博客写得很好，我这里简单总结一下，比较一下两者的特点和不同，两者的格式转换为什么这么困难，以及为什么正式场合更多使用pdf而不是word。&lt;/p&gt;
    
    </summary>
    
      <category term="技术杂谈" scheme="https://ultronxr.xyz/categories/%E6%8A%80%E6%9C%AF%E6%9D%82%E8%B0%88/"/>
    
    
      <category term="word" scheme="https://ultronxr.xyz/tags/word/"/>
    
      <category term="pdf" scheme="https://ultronxr.xyz/tags/pdf/"/>
    
  </entry>
  
  <entry>
    <title>Hexo博客测试</title>
    <link href="https://ultronxr.xyz/2018/12/20/Hexo-Test/"/>
    <id>https://ultronxr.xyz/2018/12/20/Hexo-Test/</id>
    <published>2018-12-20T02:48:17.000Z</published>
    <updated>2018-12-25T02:52:29.220Z</updated>
    
    <content type="html"><![CDATA[<p>—这里是文章摘要—<br>这是该博客对于Hexo的测试页面。</p><a id="more"></a><h1 id="标题1"><a href="#标题1" class="headerlink" title="标题1"></a>标题1</h1><h2 id="标题2"><a href="#标题2" class="headerlink" title="标题2"></a>标题2</h2><p>正文正文正文正文正文正文正文<br>正文正文正文正文正文正文正文<br>正文正文正文正文正文正文正文<br>正文正文正文正文正文正文正文</p><figure class="highlight c"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//C测试</span></span><br><span class="line"><span class="built_in">printf</span>(<span class="string">"HelloWorld"</span>);</span><br></pre></td></tr></table></figure><figure class="highlight c++"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//C++测试</span></span><br><span class="line"><span class="built_in">cout</span> &lt;&lt; <span class="string">"HelloWorld"</span> &lt;&lt; <span class="built_in">endl</span>;</span><br></pre></td></tr></table></figure><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">//java测试</span></span><br><span class="line">System.out.println(<span class="string">"HelloWorld"</span>);</span><br></pre></td></tr></table></figure><figure class="highlight python"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment"># python测试</span></span><br><span class="line"><span class="keyword">import</span> math;</span><br><span class="line">print(<span class="string">"HelloWorld"</span>);</span><br></pre></td></tr></table></figure>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;—这里是文章摘要—&lt;br&gt;这是该博客对于Hexo的测试页面。&lt;/p&gt;
    
    </summary>
    
      <category term="测试" scheme="https://ultronxr.xyz/categories/%E6%B5%8B%E8%AF%95/"/>
    
    
      <category term="test" scheme="https://ultronxr.xyz/tags/test/"/>
    
  </entry>
  
  <entry>
    <title>Java中的try catch finally语法（坑）</title>
    <link href="https://ultronxr.xyz/2018/11/12/Try-catch-finally-statement-in-java/"/>
    <id>https://ultronxr.xyz/2018/11/12/Try-catch-finally-statement-in-java/</id>
    <published>2018-11-11T16:00:00.000Z</published>
    <updated>2018-12-22T10:49:34.095Z</updated>
    
    <content type="html"><![CDATA[<p>以前都没有仔细注意过try catch finally的用途，只知道在代码里try catch一下，然后println一下异常提示。<br>今天在做项目的时候被这个坑了好久，感叹自己学艺不精！下面讲一下里面的心路历程。</p><a id="more"></a><h1 id="一、写这篇文章的起因"><a href="#一、写这篇文章的起因" class="headerlink" title="一、写这篇文章的起因"></a>一、写这篇文章的起因</h1><p><br></p><p>超级超级低级的错误！！！</p><p>以前都没有仔细注意过try catch finally的用途，只知道在代码里try catch一下，然后println一下异常提示。</p><p>今天在做项目的时候被这个坑了好久，感叹自己学艺不精！下面讲一下里面的心路历程。</p><p>直接上代码（第一版的代码）：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br><span class="line">23</span><br><span class="line">24</span><br><span class="line">25</span><br><span class="line">26</span><br><span class="line">27</span><br></pre></td><td class="code"><pre><span class="line"><span class="comment">/**</span></span><br><span class="line"><span class="comment"> * <span class="doctag">@Description</span>: 这是一个线程中的execute方法实例，用来在rabbitmq里注册一个consumer消费者，每隔一定时间去取消息队列中的信息</span></span><br><span class="line"><span class="comment"> */</span></span><br><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TransferExecutor</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            ......</span><br><span class="line">            </span><br><span class="line">            Consumer consumer = <span class="keyword">new</span> DefaultConsumer(channel);</span><br><span class="line">            <span class="keyword">while</span>(<span class="keyword">true</span>)&#123;</span><br><span class="line">                channel.basicConsume(queueName, autoAck, consumer);</span><br><span class="line">                Thread.sleep(<span class="number">100</span>);</span><br><span class="line">            &#125;</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (Exception ex)&#123;</span><br><span class="line">            ex.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">finally</span> &#123;</span><br><span class="line">            MyRabbitMQ.closeChannelAndConnection(channel, connection);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line">        execute();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>上面这段代码完全可以正常运行，甚至一段相当长的时间内都看不出异常。。。</p><p>直到我用rabbitmq自带的可视化界面看了一下我的队列，发现我的队列绑定着上百个consumer（要不是IDEA报错我可能现在还没发现）。</p><p>原因是 <code>channel.basicConsume()</code> 方法并不是单单从队列中取出信息消费一次（重点），而是注册一个消费者consumer持续地进行消费，直至channel关闭或手动删除consumer。</p><p><br> <br></p><p>修改了，然后就有了第二版代码：</p><figure class="highlight java"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br></pre></td><td class="code"><pre><span class="line"><span class="keyword">public</span> <span class="class"><span class="keyword">class</span> <span class="title">TransferExecutor</span> <span class="keyword">implements</span> <span class="title">Runnable</span></span>&#123;</span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">execute</span><span class="params">()</span></span>&#123;</span><br><span class="line">        <span class="keyword">try</span>&#123;</span><br><span class="line">            ......</span><br><span class="line">            </span><br><span class="line">            Consumer consumer = <span class="keyword">new</span> DefaultConsumer(channel);</span><br><span class="line">            channel.basicConsume(queueName, autoAck, consumer); <span class="comment">//不是说注册消费者吗，那我就只注册一个呗。</span></span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">catch</span> (Exception ex)&#123;</span><br><span class="line">            ex.printStackTrace();</span><br><span class="line">        &#125;</span><br><span class="line">        <span class="keyword">finally</span> &#123;</span><br><span class="line">            MyRabbitMQ.closeChannelAndConnection(channel, connection);</span><br><span class="line">        &#125;</span><br><span class="line">    &#125;</span><br><span class="line">    </span><br><span class="line">    <span class="meta">@Override</span></span><br><span class="line">    <span class="function"><span class="keyword">public</span> <span class="keyword">void</span> <span class="title">run</span><span class="params">()</span></span>&#123;</span><br><span class="line">        execute();</span><br><span class="line">    &#125;</span><br><span class="line">&#125;</span><br></pre></td></tr></table></figure><p>然后呢，代码直接就不能用了，不是说不能运行，而是publish新的消息没有消费者去处理，然后发现在队列上完全没有消费者绑着。</p><p>调了很久，一直找不出错误，一度怀疑是 <code>Executors.newFixedThreadPool(10)</code> 的线程池有问题。。。</p><p>然后这里把代码简化了就能一眼看出来了，try运行完了没有抛出异常直接就转到finally里的代码了，线程在运行，却关闭了消息队列的连接，当然没法消费了（再次重点）。</p><p><br> <br> <br></p><h1 id="二、借此机会摘记一下try-catch-finally的用法和运行顺序"><a href="#二、借此机会摘记一下try-catch-finally的用法和运行顺序" class="headerlink" title="二、借此机会摘记一下try catch finally的用法和运行顺序"></a>二、借此机会摘记一下try catch finally的用法和运行顺序</h1><p><br></p><p>据说有些公司拿这个当过面试和笔试题（别人博客上看到的）。</p><p>考运行顺序一般是和return exit这些函数放在一起考的，详见下面的摘记或博客（这里我列了一些我看到的比较好的博客）：</p><p><a href="https://blog.csdn.net/u013309870/article/details/73498860" target="_blank" rel="noopener">Java异常机制–try catch finally 执行顺序详解</a></p><p><a href="https://blog.csdn.net/aaoxue/article/details/8535754" target="_blank" rel="noopener">Java异常捕获之try-catch-finally-return的执行顺序</a></p><p style="font-size:6px">以后会填坑的（小声逼逼..）</p><p><br> <br> <br></p><h1 id="三、总结"><a href="#三、总结" class="headerlink" title="三、总结"></a>三、总结</h1><p><br></p><p>学艺不精，继续努力！</p><p><br> <br> <br> <br></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;以前都没有仔细注意过try catch finally的用途，只知道在代码里try catch一下，然后println一下异常提示。&lt;br&gt;今天在做项目的时候被这个坑了好久，感叹自己学艺不精！下面讲一下里面的心路历程。&lt;/p&gt;
    
    </summary>
    
      <category term="java" scheme="https://ultronxr.xyz/categories/java/"/>
    
      <category term="problems" scheme="https://ultronxr.xyz/categories/java/problems/"/>
    
    
      <category term="java" scheme="https://ultronxr.xyz/tags/java/"/>
    
      <category term="problems" scheme="https://ultronxr.xyz/tags/problems/"/>
    
  </entry>
  
  <entry>
    <title>在Windows上安装maven，并且在eclipse和IDEA中配置maven</title>
    <link href="https://ultronxr.xyz/2018/10/01/How-to-install-maven-on-windows-and-the-setup-of-maven-in-eclipse-and-IDEA/"/>
    <id>https://ultronxr.xyz/2018/10/01/How-to-install-maven-on-windows-and-the-setup-of-maven-in-eclipse-and-IDEA/</id>
    <published>2018-09-30T16:00:00.000Z</published>
    <updated>2018-12-22T10:49:47.508Z</updated>
    
    <content type="html"><![CDATA[<p>在Windows上安装maven，并且在eclipse和IDEA中配置maven</p><a id="more"></a><h1 id="一、下载和配置maven"><a href="#一、下载和配置maven" class="headerlink" title="一、下载和配置maven"></a>一、下载和配置maven</h1><p><br></p><h2 id="1-下载maven压缩包"><a href="#1-下载maven压缩包" class="headerlink" title="1.下载maven压缩包"></a>1.下载maven压缩包</h2><p>进入Apache maven<a href="http://maven.apache.org/download.cgi" target="_blank" rel="noopener">下载页面</a>，选择Windows对应的maven压缩包，点击下载。如果有版本要求在下面的历史版本中找。</p><p><div><img src="\assets\images\2018-10-01-How to install maven on windows and the setup of maven in eclipse and IDEA\00.png" align="absmiddle" width="100%" height="100%"></div> <br></p><h2 id="2-配置maven"><a href="#2-配置maven" class="headerlink" title="2.配置maven"></a>2.配置maven</h2><p>1) 配置前请先确认你正确安装了Java的jdk；</p><p>2) 把下载的压缩包解压到某路径内，我的是 <code>D:\JAVA\apache-maven-3.5.4</code> ；</p><p><div><img src="\assets\images\2018-10-01-How to install maven on windows and the setup of maven in eclipse and IDEA\01.png" align="absmiddle" width="100%" height="100%"></div> <br></p><p>3) 修改maven配置：</p><p>打开 <code>conf</code> 文件夹内的 <code>settings.xml</code> 文件，按照下面修改：</p><p>在图示位置加上 下面这一段代码，作用是指定路径作为本地仓库所在的文件夹，你也可以指定其他的路径文件夹（默认的仓库是是C盘当前用户文件夹内的.m2文件夹，修改到别的位置防止C盘占用太多）：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><span class="line">&lt;localRepository&gt;D:\JAVA\ApachemavenRepository&lt;/localRepository&gt;</span><br></pre></td></tr></table></figure><p><div><img src="\assets\images\2018-10-01-How to install maven on windows and the setup of maven in eclipse and IDEA\02.png" align="absmiddle" width="100%" height="100%"></div> <br></p><p>继续在图片所示位置加上以下代码，注意要加在两个<code>&lt;mirrors&gt;`</code>`标签之间，代码的作用是把阿里云maven仓库作为远程仓库：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><span class="line">&lt;mirror&gt;   </span><br><span class="line">  &lt;id&gt;alimaven&lt;/id&gt;   </span><br><span class="line">  &lt;name&gt;aliyun maven&lt;/name&gt;   </span><br><span class="line">  &lt;url&gt;http://maven.aliyun.com/nexus/content/groups/public/&lt;/url&gt;   </span><br><span class="line">  &lt;mirrorOf&gt;central&lt;/mirrorOf&gt;           </span><br><span class="line">&lt;/mirror&gt;</span><br></pre></td></tr></table></figure><p><div><img src="\assets\images\2018-10-01-How to install maven on windows and the setup of maven in eclipse and IDEA\03.png" align="absmiddle" width="100%" height="100%"></div> <br></p><p>保存后关闭文件。</p><p><br></p><p>4) 接下来配置环境变量：</p><p>在 <code>系统变量</code> 中新建一个变量，名称为 <code>MAVEN_HOME</code> ，值为 <code>D:\JAVA\apache-maven-3.5.4</code> （你解压maven的路径）；</p><p><div><img src="\assets\images\2018-10-01-How to install maven on windows and the setup of maven in eclipse and IDEA\04.png" align="absmiddle" width="100%" height="100%"></div> <br></p><p>在 <code>系统变量</code> 的 <code>PATH</code> 变量里新加一个值 <code>%MAVEN_HOME%\bin</code> ；</p><p>保存退出。</p><p><br></p><p>5) 验证maven是否安装成功：</p><p>打开cmd窗口，输入 <code>mvn -v</code> 命令，如果输出了maven的版本信息，说明安装成功，如下图所示。</p><p><div><img src="\assets\images\2018-10-01-How to install maven on windows and the setup of maven in eclipse and IDEA\05.png" align="absmiddle" width="100%" height="100%"></div> <br></p><p><br> <br> <br></p><h1 id="二、在eclipse中配置maven"><a href="#二、在eclipse中配置maven" class="headerlink" title="二、在eclipse中配置maven"></a>二、在eclipse中配置maven</h1><p><br></p><p>1.点击菜单栏中的Windows选项，打开Preferences选项卡;</p><p>2.找到Maven选项里的Installations选项：</p><p><div><img src="\assets\images\2018-10-01-How to install maven on windows and the setup of maven in eclipse and IDEA\06.png" align="absmiddle" width="60%" height="60%"></div> <br></p><p>3.点击右侧的Add按钮，在弹出来的对话框中点击Diretory按钮，选择解压maven的目录；</p><p><div><img src="\assets\images\2018-10-01-How to install maven on windows and the setup of maven in eclipse and IDEA\07.png" align="absmiddle" width="60%" height="60%"></div> <br></p><p><div><img src="\assets\images\2018-10-01-How to install maven on windows and the setup of maven in eclipse and IDEA\08.png" align="absmiddle" width="60%" height="60%"></div> <br></p><p>4.选好后点击Finish按钮回到开始的选项处，发现列表中多了一条我们自定义的maven，把这条maven前面的复选框勾上，点击Apply按钮应用更改。</p><p><div><img src="\assets\images\2018-10-01-How to install maven on windows and the setup of maven in eclipse and IDEA\09.png" align="absmiddle" width="60%" height="60%"></div> <br></p><p>5.选择左边的User Settings选项；</p><p>6.点击第一个Browse按钮，选择解压maven路径下的conf文件夹里的settings.xml文件；</p><p><div><img src="\assets\images\2018-10-01-How to install maven on windows and the setup of maven in eclipse and IDEA\10.png" align="absmiddle" width="60%" height="60%"></div> <br></p><p><div><img src="\assets\images\2018-10-01-How to install maven on windows and the setup of maven in eclipse and IDEA\11.png" align="absmiddle" width="60%" height="60%"></div> <br></p><p>7.上一步完成后，你会发现第三个Local Repository处自动变成了你的maven配置文件里指定的本地仓库的路径；</p><p><div><img src="\assets\images\2018-10-01-How to install maven on windows and the setup of maven in eclipse and IDEA\12.png" align="absmiddle" width="60%" height="60%"></div> <br></p><p>8.点击Apply和Apply and Close应用后退出即可。</p><p><br> <br> <br></p><h1 id="三、在IDEA中配置maven"><a href="#三、在IDEA中配置maven" class="headerlink" title="三、在IDEA中配置maven"></a>三、在IDEA中配置maven</h1><p><br></p><p>1.点击菜单中的File选项，选择Settings；</p><p>2.定位到左边选项列表中的 Build,Execution,Deployment –&gt; Build Tools –&gt; Maven 选项；</p><p><div><img src="\assets\images\2018-10-01-How to install maven on windows and the setup of maven in eclipse and IDEA\13.png" align="absmiddle" width="60%" height="40%"></div> <br></p><p>3.点击Maven选项，在右边的 Maven home directory 处选择解压maven的路径，</p><p>在User settings file后面的Override勾勾打上，选择解压maven路径中conf文件夹内的settings.xml文件，</p><p>选择完成后，下面的Local repository会自动修改为配置文件中本地仓库的路径；</p><p>点击Apply保存修改；</p><p><div><img src="\assets\images\2018-10-01-How to install maven on windows and the setup of maven in eclipse and IDEA\14.png" align="absmiddle" width="100%" height="100%"></div> <br></p><p>4.点击Maven选项下的Importing选项，把 Importing Maven projects automatically 前面的勾勾上，点击Apply保存修改；</p><p><div><img src="\assets\images\2018-10-01-How to install maven on windows and the setup of maven in eclipse and IDEA\15.png" align="absmiddle" width="100%" height="100%"></div> <br></p><p>5.点击Maven选项下的Repositoroes选项，选中刚才我们自己设置的maven，点击右侧Update按钮更新本地仓库。</p><p><div><img src="\assets\images\2018-10-01-How to install maven on windows and the setup of maven in eclipse and IDEA\16.png" align="absmiddle" width="100%" height="100%"></div> <br></p><p>6.至此配置完成。</p><p><br> <br></p><h1 id="四、参考资料"><a href="#四、参考资料" class="headerlink" title="四、参考资料"></a>四、参考资料</h1><p><br></p><p>1.apache maven<a href="http://maven.apache.org/download.cgi" target="_blank" rel="noopener">下载页面</a></p><p>2.<a href="https://www.cnblogs.com/pengyan-9826/p/7767070.html" target="_blank" rel="noopener">Eclipse配置maven环境</a></p><p>3.<a href="https://blog.csdn.net/westos_linux/article/details/78968012" target="_blank" rel="noopener">如何使用IntelliJ IDEA 配置Maven</a></p><p><br> <br> <br> <br></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;在Windows上安装maven，并且在eclipse和IDEA中配置maven&lt;/p&gt;
    
    </summary>
    
      <category term="javaweb" scheme="https://ultronxr.xyz/categories/javaweb/"/>
    
    
      <category term="java" scheme="https://ultronxr.xyz/tags/java/"/>
    
      <category term="javaweb" scheme="https://ultronxr.xyz/tags/javaweb/"/>
    
      <category term="maven" scheme="https://ultronxr.xyz/tags/maven/"/>
    
      <category term="IDEA" scheme="https://ultronxr.xyz/tags/IDEA/"/>
    
      <category term="eclipse" scheme="https://ultronxr.xyz/tags/eclipse/"/>
    
  </entry>
  
  <entry>
    <title>IDEA中编译器与项目的java版本不同导致编译失败的解决办法</title>
    <link href="https://ultronxr.xyz/2018/10/01/Compiling-failure-due-to-the-differences-between-project-and-java-complier/"/>
    <id>https://ultronxr.xyz/2018/10/01/Compiling-failure-due-to-the-differences-between-project-and-java-complier/</id>
    <published>2018-09-30T16:00:00.000Z</published>
    <updated>2018-12-22T10:49:55.161Z</updated>
    
    <content type="html"><![CDATA[<p>IDEA中编译器与项目的java版本不同导致编译失败的解决办法</p><a id="more"></a><h1 id="一、错误征兆"><a href="#一、错误征兆" class="headerlink" title="一、错误征兆"></a>一、错误征兆</h1><p><br></p><p>IDEA中编译项目有时会出现以下几种报错情况，基本上是因为编译器和项目的java版本不匹配：</p><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">@Override is not allowed when implementing interface method</span><br><span class="line">//Override不能用</span><br></pre></td></tr></table></figure><figure class="highlight plain"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><span class="line">Error:java: Compilation failed: internal java compiler error </span><br><span class="line">//编译器出错</span><br></pre></td></tr></table></figure><p><br><br></p><h1 id="二、解决办法"><a href="#二、解决办法" class="headerlink" title="二、解决办法"></a>二、解决办法</h1><p><br></p><p>1.先打开项目结构Project Structure对话框，选择Project选项卡，检查Project SDK和Project language level是否匹配，1.8的JDK应该对应于8的language level；</p><p><div><img src="\assets\images\2018-10-01-Compiling failure due to the differences between project and java complier\00.png" align="absmiddle" width="100%" height="100%"></div> <br></p><p>2.切换到Modules选项卡，检查language level是否匹配和上一步中的language level匹配；</p><p><div><img src="\assets\images\2018-10-01-Compiling failure due to the differences between project and java complier\01.png" align="absmiddle" width="100%" height="100%"></div> <br></p><p>3.打开IDEA系统设置对话框，定位到 Build,Execution,Deployment –&gt; Compiler –&gt; Java Compiler 选项卡，修改右侧的Module中的Target bytecode version，使其匹配当前的JDK版本；</p><p><div><img src="\assets\images\2018-10-01-Compiling failure due to the differences between project and java complier\02.png" align="absmiddle" width="100%" height="100%"></div> <br></p><p>4.因为我这里用的是1.8的JDK，所以其他的language level都是设置成8的，其他版本的JDK应该设置成相对应的数值。</p><p><br> <br></p><h1 id="三、参考资料"><a href="#三、参考资料" class="headerlink" title="三、参考资料"></a>三、参考资料</h1><p><br></p><p>1.<a href="https://blog.csdn.net/shenya2/article/details/50460447" target="_blank" rel="noopener">idea @Override is not allowed when implementing interface method解决办法</a></p><p>2.<a href="https://blog.csdn.net/jdjdndhj/article/details/70256989" target="_blank" rel="noopener">Error:java: Compilation failed: internal java compiler error 解决办法</a></p><p><br> <br> <br> <br></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;IDEA中编译器与项目的java版本不同导致编译失败的解决办法&lt;/p&gt;
    
    </summary>
    
      <category term="IDEA" scheme="https://ultronxr.xyz/categories/IDEA/"/>
    
    
      <category term="java" scheme="https://ultronxr.xyz/tags/java/"/>
    
      <category term="IDEA" scheme="https://ultronxr.xyz/tags/IDEA/"/>
    
  </entry>
  
  <entry>
    <title>使用IDEA创建maven web项目</title>
    <link href="https://ultronxr.xyz/2018/10/01/Create-maven-web-project-using-IDEA/"/>
    <id>https://ultronxr.xyz/2018/10/01/Create-maven-web-project-using-IDEA/</id>
    <published>2018-09-30T16:00:00.000Z</published>
    <updated>2018-12-22T10:49:51.604Z</updated>
    
    <content type="html"><![CDATA[<p>使用IDEA创建maven web项目</p><a id="more"></a><h1 id="一、新建项目"><a href="#一、新建项目" class="headerlink" title="一、新建项目"></a>一、新建项目</h1><p><br></p><p>1.在刚打开的IDEA页面点击 Create New Project 按钮 或者 在项目界面点击菜单中的 File–New–Project 选项；</p><p>2.在弹出的新建项目对话框中选择左边的Maven选项，在右侧列表中勾上Create from archetype复选框，选择maven-archetype-webapp选项，点击Next按钮进入下一步；</p><p><div><img src="\assets\images\2018-10-01-Create maven web project using IDEA\00.png" align="absmiddle" width="100%" height="100%"></div> <br></p><p>3.填写GroupId和ArtifactId，第一个是组织名称，第二个是项目标识名，两者意义的详细介绍自行百度，第三个Version 1.0-SNAPSHOT代表项目是测试版本，不是稳定版本，点击Next按钮进入下一步；</p><p><div><img src="\assets\images\2018-10-01-Create maven web project using IDEA\01.png" align="absmiddle" width="100%" height="100%"></div> <br></p><p>4.配置maven页面，可以使用IDEA自带的，也可以选择自己安装的maven。我这里是自己安装的maven，第一个Maven home directory选择maven的安装路径，第二个User settings file打上Override的勾，然后选择maven安装路径中conf文件夹下的settings.xml配置文件，其他的不用改，点击Next按钮进入下一步；</p><p><div><img src="\assets\images\2018-10-01-Create maven web project using IDEA\02.png" align="absmiddle" width="100%" height="100%"></div> <br></p><p>5.这里就改一下项目所在的路径就可以了，基本不变，点击Finish即可；</p><p><div><img src="\assets\images\2018-10-01-Create maven web project using IDEA\03.png" align="absmiddle" width="100%" height="100%"></div> <br></p><p><br></p><h1 id="二、配置项目"><a href="#二、配置项目" class="headerlink" title="二、配置项目"></a>二、配置项目</h1><p><br></p><p>1.新建的项目的文件树如下：</p><p><div><img src="\assets\images\2018-10-01-Create maven web project using IDEA\04.png" align="absmiddle" width="50%" height="50%"></div> <br></p><p>2.在main文件夹内新建两个并列的文件夹，一个是java，一个是resources。建好后点击菜单栏右上角的项目结构按钮，选择左边的Modules选项卡，在右边把java文件夹标记为Sources，把resources文件夹标记为Resources；</p><p><div><img src="\assets\images\2018-10-01-Create maven web project using IDEA\05.png" align="absmiddle" width="100%" height="100%"></div> <br></p><p><div><img src="\assets\images\2018-10-01-Create maven web project using IDEA\06.png" align="absmiddle" width="100%" height="100%"></div> <br></p><p>3.点击Apply后切换到Facets选项卡，点击右边的加号，选择Web，在弹出来的对话框中选择你的项目，点击OK；</p><p><div><img src="\assets\images\2018-10-01-Create maven web project using IDEA\07.png" align="absmiddle" width="100%" height="100%"></div> <br></p><p><div><img src="\assets\images\2018-10-01-Create maven web project using IDEA\08.png" align="absmiddle" width="100%" height="100%"></div> <br></p><p>4.点击OK后会自动跳转到Modules选项卡，切回到Facets选项卡，选中刚刚新建的Web，在右侧Deployment Description中，选中内容点击小铅笔图标，修改Path为当前项目的web.xml文件路径；</p><p><div><img src="\assets\images\2018-10-01-Create maven web project using IDEA\09.png" align="absmiddle" width="100%" height="100%"></div> <br></p><p><div><img src="\assets\images\2018-10-01-Create maven web project using IDEA\10.png" align="absmiddle" width="60%" height="60%"></div> <br></p><p><div><img src="\assets\images\2018-10-01-Create maven web project using IDEA\11.png" align="absmiddle" width="100%" height="100%"></div> <br></p><p>5.然后修改Web Resource Directories，选中内容点击小铅笔图标修改为当前项目的webapp目录，修改好后点击Apply；</p><p><div><img src="\assets\images\2018-10-01-Create maven web project using IDEA\12.png" align="absmiddle" width="100%" height="100%"></div> <br></p><p><div><img src="\assets\images\2018-10-01-Create maven web project using IDEA\13.png" align="absmiddle" width="60%" height="60%"></div> <br></p><p>6.切换到Artifacts选项卡，点击右边的加号，选择Web Application: Exploded，选择From Modules，在弹出来的对话框中选择当前项目，点击OK，完成后如下图；</p><p><div><img src="\assets\images\2018-10-01-Create maven web project using IDEA\14.png" align="absmiddle" width="100%" height="100%"></div> <br></p><p><div><img src="\assets\images\2018-10-01-Create maven web project using IDEA\15.png" align="absmiddle" width="60%" height="60%"></div> <br></p><p><div><img src="\assets\images\2018-10-01-Create maven web project using IDEA\16.png" align="absmiddle" width="100%" height="100%"></div> <br></p><p>7.点击Apply应用修改，点击OK关闭窗口，点击菜单栏右上方一个小锤子右边的Add Configuration按钮，在弹出来的对话框里点击加号，依次选择Tomcat Server – Local；</p><p><div><img src="\assets\images\2018-10-01-Create maven web project using IDEA\17.png" align="absmiddle" width="100%" height="100%"></div> <br></p><p>8.在右侧选择Deployment选项卡，点击右侧的加号，选择Artifact，完成后修改Application context为项目名（也可以是别的名称，这个是用来指定url中根目录下具体路径的）；</p><p><div><img src="\assets\images\2018-10-01-Create maven web project using IDEA\18.png" align="absmiddle" width="100%" height="100%"></div> <br></p><p><div><img src="\assets\images\2018-10-01-Create maven web project using IDEA\19.png" align="absmiddle" width="100%" height="100%"></div> <br></p><p>9.切换到Server选项卡，自上往下依次修改：</p><p>Name 随便写</p><p>Application server 选一个tomcat，如何配置tomcat略</p><p>Open browser中的After launch前面的勾勾上就会在运行项目时自动打开浏览器，浏览器选择Chrome</p><p>On ‘Update’ action 和 On frame deactivation两个选项都改成 Update classes and resources，这样修改代码就会自动更新到tomcat里而不用重启服务器</p><p>下面的HTTP端口按照自己的配置因人而异</p><p><div><img src="\assets\images\2018-10-01-Create maven web project using IDEA\20.png" align="absmiddle" width="100%" height="100%"></div> <br></p><p>10.点击Apply和OK后，点击右上方的运行按钮，就是一个向右的小三角，如果等待一会后浏览器打开跳转到了项目页面，显示了Hello World（index.jsp中的内容），说明配置成功。点击IDEA右上方红色的小方块停止运行。</p><p><div><img src="\assets\images\2018-10-01-Create maven web project using IDEA\21.png" align="absmiddle" width="50%" height="50%"></div> <br></p><p><div><img src="\assets\images\2018-10-01-Create maven web project using IDEA\22.png" align="absmiddle" width="100%" height="100%"></div> <br></p><p><div><img src="\assets\images\2018-10-01-Create maven web project using IDEA\23.png" align="absmiddle" width="50%" height="50%"></div> <br></p><p><br><br></p><h1 id="三、导出项目成war包"><a href="#三、导出项目成war包" class="headerlink" title="三、导出项目成war包"></a>三、导出项目成war包</h1><p><br></p><p>1.打开Project Structure对话框，切换到Artifacts选项卡，点击加号新建，选择Application Web: Archive，如果配置了前面的Application Web: exploded的话，这里会有 ‘For 你的项目名称’  的选项，直接点击这个，Output Directory可以修改成别的文件夹，点击Apply和OK退出；</p><p><div><img src="\assets\images\2018-10-01-Create maven web project using IDEA\24.png" align="absmiddle" width="100%" height="100%"></div> <br></p><p>2.点击菜单栏里的Build按钮，选择Build Artifacts选项，在弹出来的选项中选择后缀为 :war 的选项（没有exploded 的选项），点击Build就会生成war包了。</p><p><div><img src="\assets\images\2018-10-01-Create maven web project using IDEA\25.png" align="absmiddle" width="60%" height="60%"></div> <br></p><p><div><img src="\assets\images\2018-10-01-Create maven web project using IDEA\26.png" align="absmiddle" width="60%" height="60%"></div> <br></p><p><div><img src="\assets\images\2018-10-01-Create maven web project using IDEA\27.png" align="absmiddle" width="60%" height="60%"></div> <br></p><p><br><br></p><h1 id="四、参考资料"><a href="#四、参考资料" class="headerlink" title="四、参考资料"></a>四、参考资料</h1><p><br></p><p>1.<a href="https://blog.csdn.net/weixin_38410429/article/details/71773667" target="_blank" rel="noopener">idea2017创建maven web项目</a></p><p>2.<a href="https://www.cnblogs.com/1314wamm/p/7475771.html" target="_blank" rel="noopener">IDEA中创建maven web项目的详细部署</a></p><p>3.<a href="https://blog.csdn.net/u011291072/article/details/53232115" target="_blank" rel="noopener">idea将项目导出为war包</a></p><p><br> <br> <br> <br></p>]]></content>
    
    <summary type="html">
    
      &lt;p&gt;使用IDEA创建maven web项目&lt;/p&gt;
    
    </summary>
    
      <category term="javaweb" scheme="https://ultronxr.xyz/categories/javaweb/"/>
    
    
      <category term="java" scheme="https://ultronxr.xyz/tags/java/"/>
    
      <category term="javaweb" scheme="https://ultronxr.xyz/tags/javaweb/"/>
    
      <category term="maven" scheme="https://ultronxr.xyz/tags/maven/"/>
    
      <category term="IDEA" scheme="https://ultronxr.xyz/tags/IDEA/"/>
    
  </entry>
  
</feed>
